# Makefile generated by XPJ for OSX64
-include Makefile.custom
ProjectName = LowLevelParticles
LowLevelParticles_custom_cflags := -isysroot $(APPLE_OSX_SDK_CURRENT_VERSION)
LowLevelParticles_custom_lflags := -isysroot $(APPLE_OSX_SDK_CURRENT_VERSION)
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtBatcher.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtBodyTransformVault.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollision.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollisionBox.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollisionCapsule.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollisionConvex.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollisionMesh.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollisionPlane.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtCollisionSphere.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtContextCpu.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtDynamics.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtParticleData.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtParticleShapeCpu.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtParticleSystemSimCpu.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtSpatialHash.cpp
LowLevelParticles_cppfiles   += ./../../LowLevelParticles/src/PtSpatialLocalHash.cpp

LowLevelParticles_cpp_debug_dep    = $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_c_debug_dep      = $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevelParticles_cfiles)))))
LowLevelParticles_debug_dep      = $(LowLevelParticles_cpp_debug_dep) $(LowLevelParticles_cc_debug_dep) $(LowLevelParticles_c_debug_dep)
-include $(LowLevelParticles_debug_dep)
LowLevelParticles_cpp_checked_dep    = $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_c_checked_dep      = $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevelParticles_cfiles)))))
LowLevelParticles_checked_dep      = $(LowLevelParticles_cpp_checked_dep) $(LowLevelParticles_cc_checked_dep) $(LowLevelParticles_c_checked_dep)
-include $(LowLevelParticles_checked_dep)
LowLevelParticles_cpp_profile_dep    = $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_c_profile_dep      = $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevelParticles_cfiles)))))
LowLevelParticles_profile_dep      = $(LowLevelParticles_cpp_profile_dep) $(LowLevelParticles_cc_profile_dep) $(LowLevelParticles_c_profile_dep)
-include $(LowLevelParticles_profile_dep)
LowLevelParticles_cpp_release_dep    = $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_c_release_dep      = $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevelParticles_cfiles)))))
LowLevelParticles_release_dep      = $(LowLevelParticles_cpp_release_dep) $(LowLevelParticles_cc_release_dep) $(LowLevelParticles_c_release_dep)
-include $(LowLevelParticles_release_dep)
LowLevelParticles_debug_hpaths    := 
LowLevelParticles_debug_hpaths    += ./../../Common/include
LowLevelParticles_debug_hpaths    += ./../../../../PxShared/include
LowLevelParticles_debug_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevelParticles_debug_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevelParticles_debug_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevelParticles_debug_hpaths    += ./../../../Include
LowLevelParticles_debug_hpaths    += ./../../../Include/common
LowLevelParticles_debug_hpaths    += ./../../../Include/geometry
LowLevelParticles_debug_hpaths    += ./../../../Include/GeomUtils
LowLevelParticles_debug_hpaths    += ./../../Common/src
LowLevelParticles_debug_hpaths    += ./../../LowLevelParticles/include
LowLevelParticles_debug_hpaths    += ./../../LowLevelParticles/src
LowLevelParticles_debug_hpaths    += ./../../LowLevel/API/include
LowLevelParticles_debug_hpaths    += ./../../LowLevel/common/include/utils
LowLevelParticles_debug_hpaths    += ./../../GeomUtils/src
LowLevelParticles_debug_hpaths    += ./../../GeomUtils/src/convex
LowLevelParticles_debug_hpaths    += ./../../GeomUtils/src/hf
LowLevelParticles_debug_hpaths    += ./../../GeomUtils/src/mesh
LowLevelParticles_debug_hpaths    += ./../../GeomUtils/headers
LowLevelParticles_debug_lpaths    := 
LowLevelParticles_debug_defines   := $(LowLevelParticles_custom_defines)
LowLevelParticles_debug_defines   += PX_PHYSX_STATIC_LIB
LowLevelParticles_debug_defines   += _DEBUG
LowLevelParticles_debug_defines   += PX_DEBUG=1
LowLevelParticles_debug_defines   += PX_CHECKED=1
LowLevelParticles_debug_defines   += PX_SUPPORT_PVD=1
LowLevelParticles_debug_libraries := 
LowLevelParticles_debug_common_cflags	:= $(LowLevelParticles_custom_cflags)
LowLevelParticles_debug_common_cflags    += -MMD
LowLevelParticles_debug_common_cflags    += $(addprefix -D, $(LowLevelParticles_debug_defines))
LowLevelParticles_debug_common_cflags    += $(addprefix -I, $(LowLevelParticles_debug_hpaths))
LowLevelParticles_debug_cflags	:= $(LowLevelParticles_debug_common_cflags)
LowLevelParticles_debug_cflags  += -arch x86_64
LowLevelParticles_debug_cflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_debug_cflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_debug_cflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_debug_cflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_debug_cflags  += -Wno-c++11-extensions
LowLevelParticles_debug_cflags  += -g3 -gdwarf-2 -O0
LowLevelParticles_debug_cppflags	:= $(LowLevelParticles_debug_common_cflags)
LowLevelParticles_debug_cppflags  += -arch x86_64
LowLevelParticles_debug_cppflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_debug_cppflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_debug_cppflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_debug_cppflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_debug_cppflags  += -Wno-c++11-extensions
LowLevelParticles_debug_cppflags  += -g3 -gdwarf-2 -O0
LowLevelParticles_debug_lflags    := $(LowLevelParticles_custom_lflags)
LowLevelParticles_debug_lflags    += $(addprefix -L, $(LowLevelParticles_debug_lpaths))
LowLevelParticles_debug_lflags  += $(addprefix -l, $(LowLevelParticles_debug_libraries))
LowLevelParticles_debug_lflags  += -arch x86_64
LowLevelParticles_debug_lflags  += -stdlib=libc++
LowLevelParticles_debug_objsdir  = $(OBJS_DIR)/LowLevelParticles_debug
LowLevelParticles_debug_cpp_o    = $(addprefix $(LowLevelParticles_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_debug_cc_o    = $(addprefix $(LowLevelParticles_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_debug_c_o      = $(addprefix $(LowLevelParticles_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevelParticles_cfiles)))))
LowLevelParticles_debug_obj      = $(LowLevelParticles_debug_cpp_o) $(LowLevelParticles_debug_cc_o) $(LowLevelParticles_debug_c_o)
LowLevelParticles_debug_bin      := ./../../../Lib/osx64/libLowLevelParticlesDEBUG.a

clean_LowLevelParticles_debug: 
	@$(ECHO) clean LowLevelParticles debug
	@$(RMDIR) $(LowLevelParticles_debug_objsdir)
	@$(RMDIR) $(LowLevelParticles_debug_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevelParticles/debug

build_LowLevelParticles_debug: postbuild_LowLevelParticles_debug
postbuild_LowLevelParticles_debug: mainbuild_LowLevelParticles_debug
mainbuild_LowLevelParticles_debug: prebuild_LowLevelParticles_debug $(LowLevelParticles_debug_bin)
prebuild_LowLevelParticles_debug:

$(LowLevelParticles_debug_bin): $(LowLevelParticles_debug_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libLowLevelParticlesDEBUG.a`
	@$(AR) rcs $(LowLevelParticles_debug_bin) $(LowLevelParticles_debug_obj)
	$(ECHO) building $@ complete!

LowLevelParticles_debug_DEPDIR = $(dir $(@))/$(*F)
$(LowLevelParticles_debug_cpp_o): $(LowLevelParticles_debug_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cppfiles))))))
	cp $(LowLevelParticles_debug_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  rm -f $(LowLevelParticles_debug_DEPDIR).d

$(LowLevelParticles_debug_cc_o): $(LowLevelParticles_debug_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_ccfiles))))))
	cp $(LowLevelParticles_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).debug.P; \
	  rm -f $(LowLevelParticles_debug_DEPDIR).d

$(LowLevelParticles_debug_c_o): $(LowLevelParticles_debug_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevelParticles_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cfiles))))))
	cp $(LowLevelParticles_debug_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_debug_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  rm -f $(LowLevelParticles_debug_DEPDIR).d

LowLevelParticles_checked_hpaths    := 
LowLevelParticles_checked_hpaths    += ./../../Common/include
LowLevelParticles_checked_hpaths    += ./../../../../PxShared/include
LowLevelParticles_checked_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevelParticles_checked_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevelParticles_checked_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevelParticles_checked_hpaths    += ./../../../Include
LowLevelParticles_checked_hpaths    += ./../../../Include/common
LowLevelParticles_checked_hpaths    += ./../../../Include/geometry
LowLevelParticles_checked_hpaths    += ./../../../Include/GeomUtils
LowLevelParticles_checked_hpaths    += ./../../Common/src
LowLevelParticles_checked_hpaths    += ./../../LowLevelParticles/include
LowLevelParticles_checked_hpaths    += ./../../LowLevelParticles/src
LowLevelParticles_checked_hpaths    += ./../../LowLevel/API/include
LowLevelParticles_checked_hpaths    += ./../../LowLevel/common/include/utils
LowLevelParticles_checked_hpaths    += ./../../GeomUtils/src
LowLevelParticles_checked_hpaths    += ./../../GeomUtils/src/convex
LowLevelParticles_checked_hpaths    += ./../../GeomUtils/src/hf
LowLevelParticles_checked_hpaths    += ./../../GeomUtils/src/mesh
LowLevelParticles_checked_hpaths    += ./../../GeomUtils/headers
LowLevelParticles_checked_lpaths    := 
LowLevelParticles_checked_defines   := $(LowLevelParticles_custom_defines)
LowLevelParticles_checked_defines   += PX_PHYSX_STATIC_LIB
LowLevelParticles_checked_defines   += NDEBUG
LowLevelParticles_checked_defines   += PX_CHECKED=1
LowLevelParticles_checked_defines   += PX_SUPPORT_PVD=1
LowLevelParticles_checked_libraries := 
LowLevelParticles_checked_common_cflags	:= $(LowLevelParticles_custom_cflags)
LowLevelParticles_checked_common_cflags    += -MMD
LowLevelParticles_checked_common_cflags    += $(addprefix -D, $(LowLevelParticles_checked_defines))
LowLevelParticles_checked_common_cflags    += $(addprefix -I, $(LowLevelParticles_checked_hpaths))
LowLevelParticles_checked_cflags	:= $(LowLevelParticles_checked_common_cflags)
LowLevelParticles_checked_cflags  += -arch x86_64
LowLevelParticles_checked_cflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_checked_cflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_checked_cflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_checked_cflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_checked_cflags  += -Wno-c++11-extensions
LowLevelParticles_checked_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
LowLevelParticles_checked_cppflags	:= $(LowLevelParticles_checked_common_cflags)
LowLevelParticles_checked_cppflags  += -arch x86_64
LowLevelParticles_checked_cppflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_checked_cppflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_checked_cppflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_checked_cppflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_checked_cppflags  += -Wno-c++11-extensions
LowLevelParticles_checked_cppflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
LowLevelParticles_checked_lflags    := $(LowLevelParticles_custom_lflags)
LowLevelParticles_checked_lflags    += $(addprefix -L, $(LowLevelParticles_checked_lpaths))
LowLevelParticles_checked_lflags  += $(addprefix -l, $(LowLevelParticles_checked_libraries))
LowLevelParticles_checked_lflags  += -arch x86_64
LowLevelParticles_checked_lflags  += -stdlib=libc++
LowLevelParticles_checked_objsdir  = $(OBJS_DIR)/LowLevelParticles_checked
LowLevelParticles_checked_cpp_o    = $(addprefix $(LowLevelParticles_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_checked_cc_o    = $(addprefix $(LowLevelParticles_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_checked_c_o      = $(addprefix $(LowLevelParticles_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevelParticles_cfiles)))))
LowLevelParticles_checked_obj      = $(LowLevelParticles_checked_cpp_o) $(LowLevelParticles_checked_cc_o) $(LowLevelParticles_checked_c_o)
LowLevelParticles_checked_bin      := ./../../../Lib/osx64/libLowLevelParticlesCHECKED.a

clean_LowLevelParticles_checked: 
	@$(ECHO) clean LowLevelParticles checked
	@$(RMDIR) $(LowLevelParticles_checked_objsdir)
	@$(RMDIR) $(LowLevelParticles_checked_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevelParticles/checked

build_LowLevelParticles_checked: postbuild_LowLevelParticles_checked
postbuild_LowLevelParticles_checked: mainbuild_LowLevelParticles_checked
mainbuild_LowLevelParticles_checked: prebuild_LowLevelParticles_checked $(LowLevelParticles_checked_bin)
prebuild_LowLevelParticles_checked:

$(LowLevelParticles_checked_bin): $(LowLevelParticles_checked_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libLowLevelParticlesCHECKED.a`
	@$(AR) rcs $(LowLevelParticles_checked_bin) $(LowLevelParticles_checked_obj)
	$(ECHO) building $@ complete!

LowLevelParticles_checked_DEPDIR = $(dir $(@))/$(*F)
$(LowLevelParticles_checked_cpp_o): $(LowLevelParticles_checked_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cppfiles))))))
	cp $(LowLevelParticles_checked_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  rm -f $(LowLevelParticles_checked_DEPDIR).d

$(LowLevelParticles_checked_cc_o): $(LowLevelParticles_checked_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_ccfiles))))))
	cp $(LowLevelParticles_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).checked.P; \
	  rm -f $(LowLevelParticles_checked_DEPDIR).d

$(LowLevelParticles_checked_c_o): $(LowLevelParticles_checked_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevelParticles_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cfiles))))))
	cp $(LowLevelParticles_checked_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_checked_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  rm -f $(LowLevelParticles_checked_DEPDIR).d

LowLevelParticles_profile_hpaths    := 
LowLevelParticles_profile_hpaths    += ./../../Common/include
LowLevelParticles_profile_hpaths    += ./../../../../PxShared/include
LowLevelParticles_profile_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevelParticles_profile_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevelParticles_profile_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevelParticles_profile_hpaths    += ./../../../Include
LowLevelParticles_profile_hpaths    += ./../../../Include/common
LowLevelParticles_profile_hpaths    += ./../../../Include/geometry
LowLevelParticles_profile_hpaths    += ./../../../Include/GeomUtils
LowLevelParticles_profile_hpaths    += ./../../Common/src
LowLevelParticles_profile_hpaths    += ./../../LowLevelParticles/include
LowLevelParticles_profile_hpaths    += ./../../LowLevelParticles/src
LowLevelParticles_profile_hpaths    += ./../../LowLevel/API/include
LowLevelParticles_profile_hpaths    += ./../../LowLevel/common/include/utils
LowLevelParticles_profile_hpaths    += ./../../GeomUtils/src
LowLevelParticles_profile_hpaths    += ./../../GeomUtils/src/convex
LowLevelParticles_profile_hpaths    += ./../../GeomUtils/src/hf
LowLevelParticles_profile_hpaths    += ./../../GeomUtils/src/mesh
LowLevelParticles_profile_hpaths    += ./../../GeomUtils/headers
LowLevelParticles_profile_lpaths    := 
LowLevelParticles_profile_defines   := $(LowLevelParticles_custom_defines)
LowLevelParticles_profile_defines   += PX_PHYSX_STATIC_LIB
LowLevelParticles_profile_defines   += NDEBUG
LowLevelParticles_profile_defines   += PX_PROFILE=1
LowLevelParticles_profile_defines   += PX_SUPPORT_PVD=1
LowLevelParticles_profile_libraries := 
LowLevelParticles_profile_common_cflags	:= $(LowLevelParticles_custom_cflags)
LowLevelParticles_profile_common_cflags    += -MMD
LowLevelParticles_profile_common_cflags    += $(addprefix -D, $(LowLevelParticles_profile_defines))
LowLevelParticles_profile_common_cflags    += $(addprefix -I, $(LowLevelParticles_profile_hpaths))
LowLevelParticles_profile_cflags	:= $(LowLevelParticles_profile_common_cflags)
LowLevelParticles_profile_cflags  += -arch x86_64
LowLevelParticles_profile_cflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_profile_cflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_profile_cflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_profile_cflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_profile_cflags  += -Wno-c++11-extensions
LowLevelParticles_profile_cflags  += -O3 -fno-strict-aliasing
LowLevelParticles_profile_cppflags	:= $(LowLevelParticles_profile_common_cflags)
LowLevelParticles_profile_cppflags  += -arch x86_64
LowLevelParticles_profile_cppflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_profile_cppflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_profile_cppflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_profile_cppflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_profile_cppflags  += -Wno-c++11-extensions
LowLevelParticles_profile_cppflags  += -O3 -fno-strict-aliasing
LowLevelParticles_profile_lflags    := $(LowLevelParticles_custom_lflags)
LowLevelParticles_profile_lflags    += $(addprefix -L, $(LowLevelParticles_profile_lpaths))
LowLevelParticles_profile_lflags  += $(addprefix -l, $(LowLevelParticles_profile_libraries))
LowLevelParticles_profile_lflags  += -arch x86_64
LowLevelParticles_profile_lflags  += -stdlib=libc++
LowLevelParticles_profile_objsdir  = $(OBJS_DIR)/LowLevelParticles_profile
LowLevelParticles_profile_cpp_o    = $(addprefix $(LowLevelParticles_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_profile_cc_o    = $(addprefix $(LowLevelParticles_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_profile_c_o      = $(addprefix $(LowLevelParticles_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevelParticles_cfiles)))))
LowLevelParticles_profile_obj      = $(LowLevelParticles_profile_cpp_o) $(LowLevelParticles_profile_cc_o) $(LowLevelParticles_profile_c_o)
LowLevelParticles_profile_bin      := ./../../../Lib/osx64/libLowLevelParticlesPROFILE.a

clean_LowLevelParticles_profile: 
	@$(ECHO) clean LowLevelParticles profile
	@$(RMDIR) $(LowLevelParticles_profile_objsdir)
	@$(RMDIR) $(LowLevelParticles_profile_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevelParticles/profile

build_LowLevelParticles_profile: postbuild_LowLevelParticles_profile
postbuild_LowLevelParticles_profile: mainbuild_LowLevelParticles_profile
mainbuild_LowLevelParticles_profile: prebuild_LowLevelParticles_profile $(LowLevelParticles_profile_bin)
prebuild_LowLevelParticles_profile:

$(LowLevelParticles_profile_bin): $(LowLevelParticles_profile_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libLowLevelParticlesPROFILE.a`
	@$(AR) rcs $(LowLevelParticles_profile_bin) $(LowLevelParticles_profile_obj)
	$(ECHO) building $@ complete!

LowLevelParticles_profile_DEPDIR = $(dir $(@))/$(*F)
$(LowLevelParticles_profile_cpp_o): $(LowLevelParticles_profile_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cppfiles))))))
	cp $(LowLevelParticles_profile_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  rm -f $(LowLevelParticles_profile_DEPDIR).d

$(LowLevelParticles_profile_cc_o): $(LowLevelParticles_profile_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_ccfiles))))))
	cp $(LowLevelParticles_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).profile.P; \
	  rm -f $(LowLevelParticles_profile_DEPDIR).d

$(LowLevelParticles_profile_c_o): $(LowLevelParticles_profile_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevelParticles_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cfiles))))))
	cp $(LowLevelParticles_profile_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_profile_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  rm -f $(LowLevelParticles_profile_DEPDIR).d

LowLevelParticles_release_hpaths    := 
LowLevelParticles_release_hpaths    += ./../../Common/include
LowLevelParticles_release_hpaths    += ./../../../../PxShared/include
LowLevelParticles_release_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevelParticles_release_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevelParticles_release_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevelParticles_release_hpaths    += ./../../../Include
LowLevelParticles_release_hpaths    += ./../../../Include/common
LowLevelParticles_release_hpaths    += ./../../../Include/geometry
LowLevelParticles_release_hpaths    += ./../../../Include/GeomUtils
LowLevelParticles_release_hpaths    += ./../../Common/src
LowLevelParticles_release_hpaths    += ./../../LowLevelParticles/include
LowLevelParticles_release_hpaths    += ./../../LowLevelParticles/src
LowLevelParticles_release_hpaths    += ./../../LowLevel/API/include
LowLevelParticles_release_hpaths    += ./../../LowLevel/common/include/utils
LowLevelParticles_release_hpaths    += ./../../GeomUtils/src
LowLevelParticles_release_hpaths    += ./../../GeomUtils/src/convex
LowLevelParticles_release_hpaths    += ./../../GeomUtils/src/hf
LowLevelParticles_release_hpaths    += ./../../GeomUtils/src/mesh
LowLevelParticles_release_hpaths    += ./../../GeomUtils/headers
LowLevelParticles_release_lpaths    := 
LowLevelParticles_release_defines   := $(LowLevelParticles_custom_defines)
LowLevelParticles_release_defines   += PX_PHYSX_STATIC_LIB
LowLevelParticles_release_defines   += NDEBUG
LowLevelParticles_release_defines   += PX_SUPPORT_PVD=0
LowLevelParticles_release_libraries := 
LowLevelParticles_release_common_cflags	:= $(LowLevelParticles_custom_cflags)
LowLevelParticles_release_common_cflags    += -MMD
LowLevelParticles_release_common_cflags    += $(addprefix -D, $(LowLevelParticles_release_defines))
LowLevelParticles_release_common_cflags    += $(addprefix -I, $(LowLevelParticles_release_hpaths))
LowLevelParticles_release_cflags	:= $(LowLevelParticles_release_common_cflags)
LowLevelParticles_release_cflags  += -arch x86_64
LowLevelParticles_release_cflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_release_cflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_release_cflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_release_cflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_release_cflags  += -Wno-c++11-extensions
LowLevelParticles_release_cflags  += -O3 -fno-strict-aliasing
LowLevelParticles_release_cppflags	:= $(LowLevelParticles_release_common_cflags)
LowLevelParticles_release_cppflags  += -arch x86_64
LowLevelParticles_release_cppflags  += -pipe -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -msse2 -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Werror
LowLevelParticles_release_cppflags  += -Wall -Wextra -fstrict-aliasing -Wstrict-aliasing=2 -pedantic -Weverything -Wno-documentation-deprecated-sync -Wno-documentation-unknown-command -Wno-float-equal -Wno-padded -Wno-weak-vtables -Wno-zero-as-null-pointer-constant -Wno-unknown-warning-option -Wno-deprecated -Wno-c++98-compat-pedantic
LowLevelParticles_release_cppflags  += -Wno-cast-align -Wno-conversion -Wno-missing-variable-declarations -Wno-shift-sign-overflow
LowLevelParticles_release_cppflags  += -Wno-exit-time-destructors -Wno-global-constructors -Wno-missing-prototypes -Wno-unreachable-code -Wno-unused-macros -Wno-used-but-marked-unused -Wno-weak-template-vtables -Wno-invalid-offsetof
LowLevelParticles_release_cppflags  += -Wno-c++11-extensions
LowLevelParticles_release_cppflags  += -O3 -fno-strict-aliasing
LowLevelParticles_release_lflags    := $(LowLevelParticles_custom_lflags)
LowLevelParticles_release_lflags    += $(addprefix -L, $(LowLevelParticles_release_lpaths))
LowLevelParticles_release_lflags  += $(addprefix -l, $(LowLevelParticles_release_libraries))
LowLevelParticles_release_lflags  += -arch x86_64
LowLevelParticles_release_lflags  += -stdlib=libc++
LowLevelParticles_release_objsdir  = $(OBJS_DIR)/LowLevelParticles_release
LowLevelParticles_release_cpp_o    = $(addprefix $(LowLevelParticles_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevelParticles_cppfiles)))))
LowLevelParticles_release_cc_o    = $(addprefix $(LowLevelParticles_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevelParticles_ccfiles)))))
LowLevelParticles_release_c_o      = $(addprefix $(LowLevelParticles_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevelParticles_cfiles)))))
LowLevelParticles_release_obj      = $(LowLevelParticles_release_cpp_o) $(LowLevelParticles_release_cc_o) $(LowLevelParticles_release_c_o)
LowLevelParticles_release_bin      := ./../../../Lib/osx64/libLowLevelParticles.a

clean_LowLevelParticles_release: 
	@$(ECHO) clean LowLevelParticles release
	@$(RMDIR) $(LowLevelParticles_release_objsdir)
	@$(RMDIR) $(LowLevelParticles_release_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevelParticles/release

build_LowLevelParticles_release: postbuild_LowLevelParticles_release
postbuild_LowLevelParticles_release: mainbuild_LowLevelParticles_release
mainbuild_LowLevelParticles_release: prebuild_LowLevelParticles_release $(LowLevelParticles_release_bin)
prebuild_LowLevelParticles_release:

$(LowLevelParticles_release_bin): $(LowLevelParticles_release_obj) 
	mkdir -p `dirname ./../../../Lib/osx64/libLowLevelParticles.a`
	@$(AR) rcs $(LowLevelParticles_release_bin) $(LowLevelParticles_release_obj)
	$(ECHO) building $@ complete!

LowLevelParticles_release_DEPDIR = $(dir $(@))/$(*F)
$(LowLevelParticles_release_cpp_o): $(LowLevelParticles_release_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cppfiles))))))
	cp $(LowLevelParticles_release_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cppfiles))))).P; \
	  rm -f $(LowLevelParticles_release_DEPDIR).d

$(LowLevelParticles_release_cc_o): $(LowLevelParticles_release_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevelParticles_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_ccfiles))))))
	cp $(LowLevelParticles_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_ccfiles))))).release.P; \
	  rm -f $(LowLevelParticles_release_DEPDIR).d

$(LowLevelParticles_release_c_o): $(LowLevelParticles_release_objsdir)/%.o:
	$(ECHO) LowLevelParticles: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevelParticles_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cfiles))))))
	cp $(LowLevelParticles_release_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevelParticles_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevelParticles/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevelParticles_release_objsdir),, $@))), $(LowLevelParticles_cfiles))))).P; \
	  rm -f $(LowLevelParticles_release_DEPDIR).d

clean_LowLevelParticles:  clean_LowLevelParticles_debug clean_LowLevelParticles_checked clean_LowLevelParticles_profile clean_LowLevelParticles_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
