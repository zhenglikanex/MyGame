# Makefile generated by XPJ for LINUX32
-include Makefile.custom
ProjectName = LowLevel
LowLevel_cppfiles   += ./../../LowLevel/API/src/px_globals.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsCCD.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsContactManager.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsContext.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsDefaultMemoryManager.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsIslandSim.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsMaterialCombiner.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsNphaseImplementationContext.cpp
LowLevel_cppfiles   += ./../../LowLevel/software/src/PxsSimpleIslandManager.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/collision/PxcContact.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcContactCache.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcContactMethodImpl.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcMaterialHeightField.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcMaterialMesh.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcMaterialMethodImpl.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcMaterialShape.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcNpBatch.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcNpCacheStreamPair.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcNpContactPrepShared.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcNpMemBlockPool.cpp
LowLevel_cppfiles   += ./../../LowLevel/common/src/pipeline/PxcNpThreadContext.cpp

LowLevel_cpp_debug_dep    = $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevel_cppfiles)))))
LowLevel_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(LowLevel_ccfiles)))))
LowLevel_c_debug_dep      = $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevel_cfiles)))))
LowLevel_debug_dep      = $(LowLevel_cpp_debug_dep) $(LowLevel_cc_debug_dep) $(LowLevel_c_debug_dep)
-include $(LowLevel_debug_dep)
LowLevel_cpp_checked_dep    = $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevel_cppfiles)))))
LowLevel_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(LowLevel_ccfiles)))))
LowLevel_c_checked_dep      = $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevel_cfiles)))))
LowLevel_checked_dep      = $(LowLevel_cpp_checked_dep) $(LowLevel_cc_checked_dep) $(LowLevel_c_checked_dep)
-include $(LowLevel_checked_dep)
LowLevel_cpp_profile_dep    = $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevel_cppfiles)))))
LowLevel_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(LowLevel_ccfiles)))))
LowLevel_c_profile_dep      = $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevel_cfiles)))))
LowLevel_profile_dep      = $(LowLevel_cpp_profile_dep) $(LowLevel_cc_profile_dep) $(LowLevel_c_profile_dep)
-include $(LowLevel_profile_dep)
LowLevel_cpp_release_dep    = $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(LowLevel_cppfiles)))))
LowLevel_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(LowLevel_ccfiles)))))
LowLevel_c_release_dep      = $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(LowLevel_cfiles)))))
LowLevel_release_dep      = $(LowLevel_cpp_release_dep) $(LowLevel_cc_release_dep) $(LowLevel_c_release_dep)
-include $(LowLevel_release_dep)
LowLevel_debug_hpaths    := 
LowLevel_debug_hpaths    += ./../../Common/include
LowLevel_debug_hpaths    += ./../../../../PxShared/include
LowLevel_debug_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevel_debug_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevel_debug_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevel_debug_hpaths    += ./../../../Include/common
LowLevel_debug_hpaths    += ./../../../Include/geometry
LowLevel_debug_hpaths    += ./../../../Include
LowLevel_debug_hpaths    += ./../../../Include/GeomUtils
LowLevel_debug_hpaths    += ./../../Common/src
LowLevel_debug_hpaths    += ./../../Common/src/unix
LowLevel_debug_hpaths    += ./../../PhysXProfile/src
LowLevel_debug_hpaths    += ./../../PhysXProfile/include
LowLevel_debug_hpaths    += ./../../GeomUtils/headers
LowLevel_debug_hpaths    += ./../../GeomUtils/src/contact
LowLevel_debug_hpaths    += ./../../GeomUtils/src/common
LowLevel_debug_hpaths    += ./../../GeomUtils/src/convex
LowLevel_debug_hpaths    += ./../../GeomUtils/src/distance
LowLevel_debug_hpaths    += ./../../GeomUtils/src/gjk
LowLevel_debug_hpaths    += ./../../GeomUtils/src/intersection
LowLevel_debug_hpaths    += ./../../GeomUtils/src/mesh
LowLevel_debug_hpaths    += ./../../GeomUtils/src/hf
LowLevel_debug_hpaths    += ./../../GeomUtils/src/pcm
LowLevel_debug_hpaths    += ./../../GeomUtils/src/ccd
LowLevel_debug_hpaths    += ./../../GeomUtils/src
LowLevel_debug_hpaths    += ./../../LowLevel/API/include
LowLevel_debug_hpaths    += ./../../LowLevel/common/include
LowLevel_debug_hpaths    += ./../../LowLevel/common/include/collision
LowLevel_debug_hpaths    += ./../../LowLevel/common/include/pipeline
LowLevel_debug_hpaths    += ./../../LowLevel/common/include/pipeline/unix
LowLevel_debug_hpaths    += ./../../LowLevel/common/include/utils
LowLevel_debug_hpaths    += ./../../LowLevel/software/include
LowLevel_debug_hpaths    += ./../../LowLevel/software/include/unix
LowLevel_debug_hpaths    += ./../../LowLevelDynamics/include
LowLevel_debug_hpaths    += ./../../LowLevelDynamics/include/unix
LowLevel_debug_lpaths    := 
LowLevel_debug_defines   := $(LowLevel_custom_defines)
LowLevel_debug_defines   += PX_PHYSX_STATIC_LIB
LowLevel_debug_defines   += _DEBUG
LowLevel_debug_defines   += PX_DEBUG=1
LowLevel_debug_defines   += PX_CHECKED=1
LowLevel_debug_defines   += PX_SUPPORT_PVD=1
LowLevel_debug_libraries := 
LowLevel_debug_common_cflags	:= $(LowLevel_custom_cflags)
LowLevel_debug_common_cflags    += -MMD
LowLevel_debug_common_cflags    += $(addprefix -D, $(LowLevel_debug_defines))
LowLevel_debug_common_cflags    += $(addprefix -I, $(LowLevel_debug_hpaths))
LowLevel_debug_common_cflags  += -m32
LowLevel_debug_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
LowLevel_debug_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
LowLevel_debug_common_cflags  += -Wno-invalid-offsetof -Wno-uninitialized -Wno-implicit-fallthrough
LowLevel_debug_common_cflags  += -Wno-missing-field-initializers
LowLevel_debug_common_cflags  += -g3 -gdwarf-2
LowLevel_debug_cflags	:= $(LowLevel_debug_common_cflags)
LowLevel_debug_cppflags	:= $(LowLevel_debug_common_cflags)
LowLevel_debug_lflags    := $(LowLevel_custom_lflags)
LowLevel_debug_lflags    += $(addprefix -L, $(LowLevel_debug_lpaths))
LowLevel_debug_lflags    += -Wl,--start-group $(addprefix -l, $(LowLevel_debug_libraries)) -Wl,--end-group
LowLevel_debug_lflags  += -lrt
LowLevel_debug_lflags  += -m32
LowLevel_debug_objsdir  = $(OBJS_DIR)/LowLevel_debug
LowLevel_debug_cpp_o    = $(addprefix $(LowLevel_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevel_cppfiles)))))
LowLevel_debug_cc_o    = $(addprefix $(LowLevel_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevel_ccfiles)))))
LowLevel_debug_c_o      = $(addprefix $(LowLevel_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevel_cfiles)))))
LowLevel_debug_obj      = $(LowLevel_debug_cpp_o) $(LowLevel_debug_cc_o) $(LowLevel_debug_c_o)
LowLevel_debug_bin      := ./../../../Lib/linux32/libLowLevelDEBUG.a

clean_LowLevel_debug: 
	@$(ECHO) clean LowLevel debug
	@$(RMDIR) $(LowLevel_debug_objsdir)
	@$(RMDIR) $(LowLevel_debug_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevel/debug

build_LowLevel_debug: postbuild_LowLevel_debug
postbuild_LowLevel_debug: mainbuild_LowLevel_debug
mainbuild_LowLevel_debug: prebuild_LowLevel_debug $(LowLevel_debug_bin)
prebuild_LowLevel_debug:

$(LowLevel_debug_bin): $(LowLevel_debug_obj) 
	mkdir -p `dirname ./../../../Lib/linux32/libLowLevelDEBUG.a`
	@$(AR) rcs $(LowLevel_debug_bin) $(LowLevel_debug_obj)
	$(ECHO) building $@ complete!

LowLevel_debug_DEPDIR = $(dir $(@))/$(*F)
$(LowLevel_debug_cpp_o): $(LowLevel_debug_objsdir)/%.o:
	$(ECHO) LowLevel: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cppfiles))))))
	cp $(LowLevel_debug_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  rm -f $(LowLevel_debug_DEPDIR).d

$(LowLevel_debug_cc_o): $(LowLevel_debug_objsdir)/%.o:
	$(ECHO) LowLevel: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_ccfiles))))))
	cp $(LowLevel_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_ccfiles))))).debug.P; \
	  rm -f $(LowLevel_debug_DEPDIR).d

$(LowLevel_debug_c_o): $(LowLevel_debug_objsdir)/%.o:
	$(ECHO) LowLevel: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevel_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cfiles))))))
	cp $(LowLevel_debug_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_debug_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  rm -f $(LowLevel_debug_DEPDIR).d

LowLevel_checked_hpaths    := 
LowLevel_checked_hpaths    += ./../../Common/include
LowLevel_checked_hpaths    += ./../../../../PxShared/include
LowLevel_checked_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevel_checked_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevel_checked_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevel_checked_hpaths    += ./../../../Include/common
LowLevel_checked_hpaths    += ./../../../Include/geometry
LowLevel_checked_hpaths    += ./../../../Include
LowLevel_checked_hpaths    += ./../../../Include/GeomUtils
LowLevel_checked_hpaths    += ./../../Common/src
LowLevel_checked_hpaths    += ./../../Common/src/unix
LowLevel_checked_hpaths    += ./../../PhysXProfile/src
LowLevel_checked_hpaths    += ./../../PhysXProfile/include
LowLevel_checked_hpaths    += ./../../GeomUtils/headers
LowLevel_checked_hpaths    += ./../../GeomUtils/src/contact
LowLevel_checked_hpaths    += ./../../GeomUtils/src/common
LowLevel_checked_hpaths    += ./../../GeomUtils/src/convex
LowLevel_checked_hpaths    += ./../../GeomUtils/src/distance
LowLevel_checked_hpaths    += ./../../GeomUtils/src/gjk
LowLevel_checked_hpaths    += ./../../GeomUtils/src/intersection
LowLevel_checked_hpaths    += ./../../GeomUtils/src/mesh
LowLevel_checked_hpaths    += ./../../GeomUtils/src/hf
LowLevel_checked_hpaths    += ./../../GeomUtils/src/pcm
LowLevel_checked_hpaths    += ./../../GeomUtils/src/ccd
LowLevel_checked_hpaths    += ./../../GeomUtils/src
LowLevel_checked_hpaths    += ./../../LowLevel/API/include
LowLevel_checked_hpaths    += ./../../LowLevel/common/include
LowLevel_checked_hpaths    += ./../../LowLevel/common/include/collision
LowLevel_checked_hpaths    += ./../../LowLevel/common/include/pipeline
LowLevel_checked_hpaths    += ./../../LowLevel/common/include/pipeline/unix
LowLevel_checked_hpaths    += ./../../LowLevel/common/include/utils
LowLevel_checked_hpaths    += ./../../LowLevel/software/include
LowLevel_checked_hpaths    += ./../../LowLevel/software/include/unix
LowLevel_checked_hpaths    += ./../../LowLevelDynamics/include
LowLevel_checked_hpaths    += ./../../LowLevelDynamics/include/unix
LowLevel_checked_lpaths    := 
LowLevel_checked_defines   := $(LowLevel_custom_defines)
LowLevel_checked_defines   += PX_PHYSX_STATIC_LIB
LowLevel_checked_defines   += NDEBUG
LowLevel_checked_defines   += PX_CHECKED=1
LowLevel_checked_defines   += PX_SUPPORT_PVD=1
LowLevel_checked_libraries := 
LowLevel_checked_common_cflags	:= $(LowLevel_custom_cflags)
LowLevel_checked_common_cflags    += -MMD
LowLevel_checked_common_cflags    += $(addprefix -D, $(LowLevel_checked_defines))
LowLevel_checked_common_cflags    += $(addprefix -I, $(LowLevel_checked_hpaths))
LowLevel_checked_common_cflags  += -m32
LowLevel_checked_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
LowLevel_checked_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
LowLevel_checked_common_cflags  += -Wno-invalid-offsetof -Wno-uninitialized -Wno-implicit-fallthrough
LowLevel_checked_common_cflags  += -Wno-missing-field-initializers
LowLevel_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
LowLevel_checked_cflags	:= $(LowLevel_checked_common_cflags)
LowLevel_checked_cppflags	:= $(LowLevel_checked_common_cflags)
LowLevel_checked_lflags    := $(LowLevel_custom_lflags)
LowLevel_checked_lflags    += $(addprefix -L, $(LowLevel_checked_lpaths))
LowLevel_checked_lflags    += -Wl,--start-group $(addprefix -l, $(LowLevel_checked_libraries)) -Wl,--end-group
LowLevel_checked_lflags  += -lrt
LowLevel_checked_lflags  += -m32
LowLevel_checked_objsdir  = $(OBJS_DIR)/LowLevel_checked
LowLevel_checked_cpp_o    = $(addprefix $(LowLevel_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevel_cppfiles)))))
LowLevel_checked_cc_o    = $(addprefix $(LowLevel_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevel_ccfiles)))))
LowLevel_checked_c_o      = $(addprefix $(LowLevel_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevel_cfiles)))))
LowLevel_checked_obj      = $(LowLevel_checked_cpp_o) $(LowLevel_checked_cc_o) $(LowLevel_checked_c_o)
LowLevel_checked_bin      := ./../../../Lib/linux32/libLowLevelCHECKED.a

clean_LowLevel_checked: 
	@$(ECHO) clean LowLevel checked
	@$(RMDIR) $(LowLevel_checked_objsdir)
	@$(RMDIR) $(LowLevel_checked_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevel/checked

build_LowLevel_checked: postbuild_LowLevel_checked
postbuild_LowLevel_checked: mainbuild_LowLevel_checked
mainbuild_LowLevel_checked: prebuild_LowLevel_checked $(LowLevel_checked_bin)
prebuild_LowLevel_checked:

$(LowLevel_checked_bin): $(LowLevel_checked_obj) 
	mkdir -p `dirname ./../../../Lib/linux32/libLowLevelCHECKED.a`
	@$(AR) rcs $(LowLevel_checked_bin) $(LowLevel_checked_obj)
	$(ECHO) building $@ complete!

LowLevel_checked_DEPDIR = $(dir $(@))/$(*F)
$(LowLevel_checked_cpp_o): $(LowLevel_checked_objsdir)/%.o:
	$(ECHO) LowLevel: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cppfiles))))))
	cp $(LowLevel_checked_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  rm -f $(LowLevel_checked_DEPDIR).d

$(LowLevel_checked_cc_o): $(LowLevel_checked_objsdir)/%.o:
	$(ECHO) LowLevel: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_ccfiles))))))
	cp $(LowLevel_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_ccfiles))))).checked.P; \
	  rm -f $(LowLevel_checked_DEPDIR).d

$(LowLevel_checked_c_o): $(LowLevel_checked_objsdir)/%.o:
	$(ECHO) LowLevel: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevel_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cfiles))))))
	cp $(LowLevel_checked_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_checked_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  rm -f $(LowLevel_checked_DEPDIR).d

LowLevel_profile_hpaths    := 
LowLevel_profile_hpaths    += ./../../Common/include
LowLevel_profile_hpaths    += ./../../../../PxShared/include
LowLevel_profile_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevel_profile_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevel_profile_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevel_profile_hpaths    += ./../../../Include/common
LowLevel_profile_hpaths    += ./../../../Include/geometry
LowLevel_profile_hpaths    += ./../../../Include
LowLevel_profile_hpaths    += ./../../../Include/GeomUtils
LowLevel_profile_hpaths    += ./../../Common/src
LowLevel_profile_hpaths    += ./../../Common/src/unix
LowLevel_profile_hpaths    += ./../../PhysXProfile/src
LowLevel_profile_hpaths    += ./../../PhysXProfile/include
LowLevel_profile_hpaths    += ./../../GeomUtils/headers
LowLevel_profile_hpaths    += ./../../GeomUtils/src/contact
LowLevel_profile_hpaths    += ./../../GeomUtils/src/common
LowLevel_profile_hpaths    += ./../../GeomUtils/src/convex
LowLevel_profile_hpaths    += ./../../GeomUtils/src/distance
LowLevel_profile_hpaths    += ./../../GeomUtils/src/gjk
LowLevel_profile_hpaths    += ./../../GeomUtils/src/intersection
LowLevel_profile_hpaths    += ./../../GeomUtils/src/mesh
LowLevel_profile_hpaths    += ./../../GeomUtils/src/hf
LowLevel_profile_hpaths    += ./../../GeomUtils/src/pcm
LowLevel_profile_hpaths    += ./../../GeomUtils/src/ccd
LowLevel_profile_hpaths    += ./../../GeomUtils/src
LowLevel_profile_hpaths    += ./../../LowLevel/API/include
LowLevel_profile_hpaths    += ./../../LowLevel/common/include
LowLevel_profile_hpaths    += ./../../LowLevel/common/include/collision
LowLevel_profile_hpaths    += ./../../LowLevel/common/include/pipeline
LowLevel_profile_hpaths    += ./../../LowLevel/common/include/pipeline/unix
LowLevel_profile_hpaths    += ./../../LowLevel/common/include/utils
LowLevel_profile_hpaths    += ./../../LowLevel/software/include
LowLevel_profile_hpaths    += ./../../LowLevel/software/include/unix
LowLevel_profile_hpaths    += ./../../LowLevelDynamics/include
LowLevel_profile_hpaths    += ./../../LowLevelDynamics/include/unix
LowLevel_profile_lpaths    := 
LowLevel_profile_defines   := $(LowLevel_custom_defines)
LowLevel_profile_defines   += PX_PHYSX_STATIC_LIB
LowLevel_profile_defines   += NDEBUG
LowLevel_profile_defines   += PX_PROFILE=1
LowLevel_profile_defines   += PX_SUPPORT_PVD=1
LowLevel_profile_libraries := 
LowLevel_profile_common_cflags	:= $(LowLevel_custom_cflags)
LowLevel_profile_common_cflags    += -MMD
LowLevel_profile_common_cflags    += $(addprefix -D, $(LowLevel_profile_defines))
LowLevel_profile_common_cflags    += $(addprefix -I, $(LowLevel_profile_hpaths))
LowLevel_profile_common_cflags  += -m32
LowLevel_profile_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
LowLevel_profile_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
LowLevel_profile_common_cflags  += -Wno-invalid-offsetof -Wno-uninitialized -Wno-implicit-fallthrough
LowLevel_profile_common_cflags  += -Wno-missing-field-initializers
LowLevel_profile_common_cflags  += -O3 -fno-strict-aliasing
LowLevel_profile_cflags	:= $(LowLevel_profile_common_cflags)
LowLevel_profile_cppflags	:= $(LowLevel_profile_common_cflags)
LowLevel_profile_lflags    := $(LowLevel_custom_lflags)
LowLevel_profile_lflags    += $(addprefix -L, $(LowLevel_profile_lpaths))
LowLevel_profile_lflags    += -Wl,--start-group $(addprefix -l, $(LowLevel_profile_libraries)) -Wl,--end-group
LowLevel_profile_lflags  += -lrt
LowLevel_profile_lflags  += -m32
LowLevel_profile_objsdir  = $(OBJS_DIR)/LowLevel_profile
LowLevel_profile_cpp_o    = $(addprefix $(LowLevel_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevel_cppfiles)))))
LowLevel_profile_cc_o    = $(addprefix $(LowLevel_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevel_ccfiles)))))
LowLevel_profile_c_o      = $(addprefix $(LowLevel_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevel_cfiles)))))
LowLevel_profile_obj      = $(LowLevel_profile_cpp_o) $(LowLevel_profile_cc_o) $(LowLevel_profile_c_o)
LowLevel_profile_bin      := ./../../../Lib/linux32/libLowLevelPROFILE.a

clean_LowLevel_profile: 
	@$(ECHO) clean LowLevel profile
	@$(RMDIR) $(LowLevel_profile_objsdir)
	@$(RMDIR) $(LowLevel_profile_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevel/profile

build_LowLevel_profile: postbuild_LowLevel_profile
postbuild_LowLevel_profile: mainbuild_LowLevel_profile
mainbuild_LowLevel_profile: prebuild_LowLevel_profile $(LowLevel_profile_bin)
prebuild_LowLevel_profile:

$(LowLevel_profile_bin): $(LowLevel_profile_obj) 
	mkdir -p `dirname ./../../../Lib/linux32/libLowLevelPROFILE.a`
	@$(AR) rcs $(LowLevel_profile_bin) $(LowLevel_profile_obj)
	$(ECHO) building $@ complete!

LowLevel_profile_DEPDIR = $(dir $(@))/$(*F)
$(LowLevel_profile_cpp_o): $(LowLevel_profile_objsdir)/%.o:
	$(ECHO) LowLevel: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cppfiles))))))
	cp $(LowLevel_profile_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  rm -f $(LowLevel_profile_DEPDIR).d

$(LowLevel_profile_cc_o): $(LowLevel_profile_objsdir)/%.o:
	$(ECHO) LowLevel: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_ccfiles))))))
	cp $(LowLevel_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_ccfiles))))).profile.P; \
	  rm -f $(LowLevel_profile_DEPDIR).d

$(LowLevel_profile_c_o): $(LowLevel_profile_objsdir)/%.o:
	$(ECHO) LowLevel: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevel_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cfiles))))))
	cp $(LowLevel_profile_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_profile_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  rm -f $(LowLevel_profile_DEPDIR).d

LowLevel_release_hpaths    := 
LowLevel_release_hpaths    += ./../../Common/include
LowLevel_release_hpaths    += ./../../../../PxShared/include
LowLevel_release_hpaths    += ./../../../../PxShared/src/foundation/include
LowLevel_release_hpaths    += ./../../../../PxShared/src/fastxml/include
LowLevel_release_hpaths    += ./../../../../PxShared/src/pvd/include
LowLevel_release_hpaths    += ./../../../Include/common
LowLevel_release_hpaths    += ./../../../Include/geometry
LowLevel_release_hpaths    += ./../../../Include
LowLevel_release_hpaths    += ./../../../Include/GeomUtils
LowLevel_release_hpaths    += ./../../Common/src
LowLevel_release_hpaths    += ./../../Common/src/unix
LowLevel_release_hpaths    += ./../../PhysXProfile/src
LowLevel_release_hpaths    += ./../../PhysXProfile/include
LowLevel_release_hpaths    += ./../../GeomUtils/headers
LowLevel_release_hpaths    += ./../../GeomUtils/src/contact
LowLevel_release_hpaths    += ./../../GeomUtils/src/common
LowLevel_release_hpaths    += ./../../GeomUtils/src/convex
LowLevel_release_hpaths    += ./../../GeomUtils/src/distance
LowLevel_release_hpaths    += ./../../GeomUtils/src/gjk
LowLevel_release_hpaths    += ./../../GeomUtils/src/intersection
LowLevel_release_hpaths    += ./../../GeomUtils/src/mesh
LowLevel_release_hpaths    += ./../../GeomUtils/src/hf
LowLevel_release_hpaths    += ./../../GeomUtils/src/pcm
LowLevel_release_hpaths    += ./../../GeomUtils/src/ccd
LowLevel_release_hpaths    += ./../../GeomUtils/src
LowLevel_release_hpaths    += ./../../LowLevel/API/include
LowLevel_release_hpaths    += ./../../LowLevel/common/include
LowLevel_release_hpaths    += ./../../LowLevel/common/include/collision
LowLevel_release_hpaths    += ./../../LowLevel/common/include/pipeline
LowLevel_release_hpaths    += ./../../LowLevel/common/include/pipeline/unix
LowLevel_release_hpaths    += ./../../LowLevel/common/include/utils
LowLevel_release_hpaths    += ./../../LowLevel/software/include
LowLevel_release_hpaths    += ./../../LowLevel/software/include/unix
LowLevel_release_hpaths    += ./../../LowLevelDynamics/include
LowLevel_release_hpaths    += ./../../LowLevelDynamics/include/unix
LowLevel_release_lpaths    := 
LowLevel_release_defines   := $(LowLevel_custom_defines)
LowLevel_release_defines   += PX_PHYSX_STATIC_LIB
LowLevel_release_defines   += NDEBUG
LowLevel_release_defines   += PX_SUPPORT_PVD=0
LowLevel_release_libraries := 
LowLevel_release_common_cflags	:= $(LowLevel_custom_cflags)
LowLevel_release_common_cflags    += -MMD
LowLevel_release_common_cflags    += $(addprefix -D, $(LowLevel_release_defines))
LowLevel_release_common_cflags    += $(addprefix -I, $(LowLevel_release_hpaths))
LowLevel_release_common_cflags  += -m32
LowLevel_release_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
LowLevel_release_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
LowLevel_release_common_cflags  += -Wno-invalid-offsetof -Wno-uninitialized -Wno-implicit-fallthrough
LowLevel_release_common_cflags  += -Wno-missing-field-initializers
LowLevel_release_common_cflags  += -O3 -fno-strict-aliasing
LowLevel_release_cflags	:= $(LowLevel_release_common_cflags)
LowLevel_release_cppflags	:= $(LowLevel_release_common_cflags)
LowLevel_release_lflags    := $(LowLevel_custom_lflags)
LowLevel_release_lflags    += $(addprefix -L, $(LowLevel_release_lpaths))
LowLevel_release_lflags    += -Wl,--start-group $(addprefix -l, $(LowLevel_release_libraries)) -Wl,--end-group
LowLevel_release_lflags  += -lrt
LowLevel_release_lflags  += -m32
LowLevel_release_objsdir  = $(OBJS_DIR)/LowLevel_release
LowLevel_release_cpp_o    = $(addprefix $(LowLevel_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(LowLevel_cppfiles)))))
LowLevel_release_cc_o    = $(addprefix $(LowLevel_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(LowLevel_ccfiles)))))
LowLevel_release_c_o      = $(addprefix $(LowLevel_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(LowLevel_cfiles)))))
LowLevel_release_obj      = $(LowLevel_release_cpp_o) $(LowLevel_release_cc_o) $(LowLevel_release_c_o)
LowLevel_release_bin      := ./../../../Lib/linux32/libLowLevel.a

clean_LowLevel_release: 
	@$(ECHO) clean LowLevel release
	@$(RMDIR) $(LowLevel_release_objsdir)
	@$(RMDIR) $(LowLevel_release_bin)
	@$(RMDIR) $(DEPSDIR)/LowLevel/release

build_LowLevel_release: postbuild_LowLevel_release
postbuild_LowLevel_release: mainbuild_LowLevel_release
mainbuild_LowLevel_release: prebuild_LowLevel_release $(LowLevel_release_bin)
prebuild_LowLevel_release:

$(LowLevel_release_bin): $(LowLevel_release_obj) 
	mkdir -p `dirname ./../../../Lib/linux32/libLowLevel.a`
	@$(AR) rcs $(LowLevel_release_bin) $(LowLevel_release_obj)
	$(ECHO) building $@ complete!

LowLevel_release_DEPDIR = $(dir $(@))/$(*F)
$(LowLevel_release_cpp_o): $(LowLevel_release_objsdir)/%.o:
	$(ECHO) LowLevel: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cppfiles))))))
	cp $(LowLevel_release_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cppfiles))))).P; \
	  rm -f $(LowLevel_release_DEPDIR).d

$(LowLevel_release_cc_o): $(LowLevel_release_objsdir)/%.o:
	$(ECHO) LowLevel: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(LowLevel_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_ccfiles))))))
	cp $(LowLevel_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_ccfiles))))).release.P; \
	  rm -f $(LowLevel_release_DEPDIR).d

$(LowLevel_release_c_o): $(LowLevel_release_objsdir)/%.o:
	$(ECHO) LowLevel: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(LowLevel_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cfiles))))))
	cp $(LowLevel_release_DEPDIR).d $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(LowLevel_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/LowLevel/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(LowLevel_release_objsdir),, $@))), $(LowLevel_cfiles))))).P; \
	  rm -f $(LowLevel_release_DEPDIR).d

clean_LowLevel:  clean_LowLevel_debug clean_LowLevel_checked clean_LowLevel_profile clean_LowLevel_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
