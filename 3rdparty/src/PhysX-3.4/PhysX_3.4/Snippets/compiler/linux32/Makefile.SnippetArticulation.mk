# Makefile generated by XPJ for LINUX32
-include Makefile.custom
ProjectName = SnippetArticulation
SnippetArticulation_cppfiles   += ./../../SnippetCommon/ClassicMain.cpp
SnippetArticulation_cppfiles   += ./../../SnippetArticulation/SnippetArticulation.cpp
SnippetArticulation_cppfiles   += ./../../SnippetArticulation/SnippetArticulationRender.cpp

SnippetArticulation_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_c_debug_dep      = $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetArticulation_cfiles)))))
SnippetArticulation_debug_dep      = $(SnippetArticulation_cpp_debug_dep) $(SnippetArticulation_cc_debug_dep) $(SnippetArticulation_c_debug_dep)
-include $(SnippetArticulation_debug_dep)
SnippetArticulation_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_c_checked_dep      = $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetArticulation_cfiles)))))
SnippetArticulation_checked_dep      = $(SnippetArticulation_cpp_checked_dep) $(SnippetArticulation_cc_checked_dep) $(SnippetArticulation_c_checked_dep)
-include $(SnippetArticulation_checked_dep)
SnippetArticulation_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_c_profile_dep      = $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetArticulation_cfiles)))))
SnippetArticulation_profile_dep      = $(SnippetArticulation_cpp_profile_dep) $(SnippetArticulation_cc_profile_dep) $(SnippetArticulation_c_profile_dep)
-include $(SnippetArticulation_profile_dep)
SnippetArticulation_cpp_release_dep    = $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_c_release_dep      = $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetArticulation_cfiles)))))
SnippetArticulation_release_dep      = $(SnippetArticulation_cpp_release_dep) $(SnippetArticulation_cc_release_dep) $(SnippetArticulation_c_release_dep)
-include $(SnippetArticulation_release_dep)
SnippetArticulation_debug_hpaths    := 
SnippetArticulation_debug_hpaths    += ./../../../Include
SnippetArticulation_debug_hpaths    += ./../../../../PxShared/include
SnippetArticulation_debug_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetArticulation_debug_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetArticulation_debug_lpaths    := 
SnippetArticulation_debug_lpaths    += ./../../../Lib/linux32
SnippetArticulation_debug_lpaths    += ./../../lib/linux32
SnippetArticulation_debug_lpaths    += ./../../../Bin/linux32
SnippetArticulation_debug_lpaths    += ./../../../../PxShared/lib/linux32
SnippetArticulation_debug_lpaths    += ./../../../../PxShared/bin/linux32
SnippetArticulation_debug_lpaths    += ./../../lib/linux32
SnippetArticulation_debug_defines   := $(SnippetArticulation_custom_defines)
SnippetArticulation_debug_defines   += PHYSX_PROFILE_SDK
SnippetArticulation_debug_defines   += RENDER_SNIPPET
SnippetArticulation_debug_defines   += _DEBUG
SnippetArticulation_debug_defines   += PX_DEBUG=1
SnippetArticulation_debug_defines   += PX_CHECKED=1
SnippetArticulation_debug_defines   += PX_SUPPORT_PVD=1
SnippetArticulation_debug_libraries := 
SnippetArticulation_debug_libraries += SnippetRenderDEBUG
SnippetArticulation_debug_libraries += SnippetUtilsDEBUG
SnippetArticulation_debug_libraries += PhysX3DEBUG_x86
SnippetArticulation_debug_libraries += PhysX3CookingDEBUG_x86
SnippetArticulation_debug_libraries += PhysX3CharacterKinematicDEBUG_x86
SnippetArticulation_debug_libraries += PhysX3ExtensionsDEBUG
SnippetArticulation_debug_libraries += PhysX3VehicleDEBUG
SnippetArticulation_debug_libraries += PxPvdSDKDEBUG_x86
SnippetArticulation_debug_libraries += PhysX3CommonDEBUG_x86
SnippetArticulation_debug_libraries += PxFoundationDEBUG_x86
SnippetArticulation_debug_libraries += PxTaskDEBUG
SnippetArticulation_debug_libraries += PsFastXmlDEBUG
SnippetArticulation_debug_libraries += SnippetUtilsDEBUG
SnippetArticulation_debug_libraries += SnippetRenderDEBUG
SnippetArticulation_debug_libraries += GL
SnippetArticulation_debug_libraries += GLU
SnippetArticulation_debug_libraries += glut
SnippetArticulation_debug_libraries += X11
SnippetArticulation_debug_libraries += rt
SnippetArticulation_debug_libraries += pthread
SnippetArticulation_debug_common_cflags	:= $(SnippetArticulation_custom_cflags)
SnippetArticulation_debug_common_cflags    += -MMD
SnippetArticulation_debug_common_cflags    += $(addprefix -D, $(SnippetArticulation_debug_defines))
SnippetArticulation_debug_common_cflags    += $(addprefix -I, $(SnippetArticulation_debug_hpaths))
SnippetArticulation_debug_common_cflags  += -m32
SnippetArticulation_debug_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetArticulation_debug_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetArticulation_debug_common_cflags  += -Wno-uninitialized
SnippetArticulation_debug_common_cflags  += -g3 -gdwarf-2
SnippetArticulation_debug_cflags	:= $(SnippetArticulation_debug_common_cflags)
SnippetArticulation_debug_cppflags	:= $(SnippetArticulation_debug_common_cflags)
SnippetArticulation_debug_lflags    := $(SnippetArticulation_custom_lflags)
SnippetArticulation_debug_lflags    += $(addprefix -L, $(SnippetArticulation_debug_lpaths))
SnippetArticulation_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetArticulation_debug_libraries)) -Wl,--end-group
SnippetArticulation_debug_lflags  += -lrt
SnippetArticulation_debug_lflags  += -Wl,-rpath ./
SnippetArticulation_debug_lflags  += -m32
SnippetArticulation_debug_objsdir  = $(OBJS_DIR)/SnippetArticulation_debug
SnippetArticulation_debug_cpp_o    = $(addprefix $(SnippetArticulation_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_debug_cc_o    = $(addprefix $(SnippetArticulation_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_debug_c_o      = $(addprefix $(SnippetArticulation_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetArticulation_cfiles)))))
SnippetArticulation_debug_obj      = $(SnippetArticulation_debug_cpp_o) $(SnippetArticulation_debug_cc_o) $(SnippetArticulation_debug_c_o)
SnippetArticulation_debug_bin      := ./../../../Bin/linux32/SnippetArticulationDEBUG

clean_SnippetArticulation_debug: 
	@$(ECHO) clean SnippetArticulation debug
	@$(RMDIR) $(SnippetArticulation_debug_objsdir)
	@$(RMDIR) $(SnippetArticulation_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetArticulation/debug

build_SnippetArticulation_debug: postbuild_SnippetArticulation_debug
postbuild_SnippetArticulation_debug: mainbuild_SnippetArticulation_debug
	@cp -u "../../../../PxShared/bin/linux32/libPxFoundationDEBUG_x86.so" "../../../Bin/linux32/libPxFoundationDEBUG_x86.so"; cp -u "../../../../PxShared/bin/linux32/libPxPvdSDKDEBUG_x86.so" "../../../Bin/linux32/libPxPvdSDKDEBUG_x86.so"
mainbuild_SnippetArticulation_debug: prebuild_SnippetArticulation_debug $(SnippetArticulation_debug_bin)
prebuild_SnippetArticulation_debug:

$(SnippetArticulation_debug_bin): $(SnippetArticulation_debug_obj) build_SnippetRender_debug build_SnippetUtils_debug 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetArticulationDEBUG`
	$(CCLD) $(SnippetArticulation_debug_obj) $(SnippetArticulation_debug_lflags) -o $(SnippetArticulation_debug_bin) 
	$(ECHO) building $@ complete!

SnippetArticulation_debug_DEPDIR = $(dir $(@))/$(*F)
$(SnippetArticulation_debug_cpp_o): $(SnippetArticulation_debug_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cppfiles))))))
	cp $(SnippetArticulation_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  rm -f $(SnippetArticulation_debug_DEPDIR).d

$(SnippetArticulation_debug_cc_o): $(SnippetArticulation_debug_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_ccfiles))))))
	cp $(SnippetArticulation_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).debug.P; \
	  rm -f $(SnippetArticulation_debug_DEPDIR).d

$(SnippetArticulation_debug_c_o): $(SnippetArticulation_debug_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetArticulation_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cfiles))))))
	cp $(SnippetArticulation_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_debug_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  rm -f $(SnippetArticulation_debug_DEPDIR).d

SnippetArticulation_checked_hpaths    := 
SnippetArticulation_checked_hpaths    += ./../../../Include
SnippetArticulation_checked_hpaths    += ./../../../../PxShared/include
SnippetArticulation_checked_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetArticulation_checked_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetArticulation_checked_lpaths    := 
SnippetArticulation_checked_lpaths    += ./../../../Lib/linux32
SnippetArticulation_checked_lpaths    += ./../../lib/linux32
SnippetArticulation_checked_lpaths    += ./../../../Bin/linux32
SnippetArticulation_checked_lpaths    += ./../../../../PxShared/lib/linux32
SnippetArticulation_checked_lpaths    += ./../../../../PxShared/bin/linux32
SnippetArticulation_checked_lpaths    += ./../../lib/linux32
SnippetArticulation_checked_defines   := $(SnippetArticulation_custom_defines)
SnippetArticulation_checked_defines   += PHYSX_PROFILE_SDK
SnippetArticulation_checked_defines   += RENDER_SNIPPET
SnippetArticulation_checked_defines   += NDEBUG
SnippetArticulation_checked_defines   += PX_CHECKED=1
SnippetArticulation_checked_defines   += PX_SUPPORT_PVD=1
SnippetArticulation_checked_libraries := 
SnippetArticulation_checked_libraries += SnippetRenderCHECKED
SnippetArticulation_checked_libraries += SnippetUtilsCHECKED
SnippetArticulation_checked_libraries += PhysX3CHECKED_x86
SnippetArticulation_checked_libraries += PhysX3CookingCHECKED_x86
SnippetArticulation_checked_libraries += PhysX3CharacterKinematicCHECKED_x86
SnippetArticulation_checked_libraries += PhysX3ExtensionsCHECKED
SnippetArticulation_checked_libraries += PhysX3VehicleCHECKED
SnippetArticulation_checked_libraries += PxPvdSDKCHECKED_x86
SnippetArticulation_checked_libraries += PhysX3CommonCHECKED_x86
SnippetArticulation_checked_libraries += PxFoundationCHECKED_x86
SnippetArticulation_checked_libraries += PxTaskCHECKED
SnippetArticulation_checked_libraries += PsFastXmlCHECKED
SnippetArticulation_checked_libraries += SnippetUtilsCHECKED
SnippetArticulation_checked_libraries += SnippetRenderCHECKED
SnippetArticulation_checked_libraries += GL
SnippetArticulation_checked_libraries += GLU
SnippetArticulation_checked_libraries += glut
SnippetArticulation_checked_libraries += X11
SnippetArticulation_checked_libraries += rt
SnippetArticulation_checked_libraries += pthread
SnippetArticulation_checked_common_cflags	:= $(SnippetArticulation_custom_cflags)
SnippetArticulation_checked_common_cflags    += -MMD
SnippetArticulation_checked_common_cflags    += $(addprefix -D, $(SnippetArticulation_checked_defines))
SnippetArticulation_checked_common_cflags    += $(addprefix -I, $(SnippetArticulation_checked_hpaths))
SnippetArticulation_checked_common_cflags  += -m32
SnippetArticulation_checked_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetArticulation_checked_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetArticulation_checked_common_cflags  += -Wno-uninitialized
SnippetArticulation_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SnippetArticulation_checked_cflags	:= $(SnippetArticulation_checked_common_cflags)
SnippetArticulation_checked_cppflags	:= $(SnippetArticulation_checked_common_cflags)
SnippetArticulation_checked_lflags    := $(SnippetArticulation_custom_lflags)
SnippetArticulation_checked_lflags    += $(addprefix -L, $(SnippetArticulation_checked_lpaths))
SnippetArticulation_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetArticulation_checked_libraries)) -Wl,--end-group
SnippetArticulation_checked_lflags  += -lrt
SnippetArticulation_checked_lflags  += -Wl,-rpath ./
SnippetArticulation_checked_lflags  += -m32
SnippetArticulation_checked_objsdir  = $(OBJS_DIR)/SnippetArticulation_checked
SnippetArticulation_checked_cpp_o    = $(addprefix $(SnippetArticulation_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_checked_cc_o    = $(addprefix $(SnippetArticulation_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_checked_c_o      = $(addprefix $(SnippetArticulation_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetArticulation_cfiles)))))
SnippetArticulation_checked_obj      = $(SnippetArticulation_checked_cpp_o) $(SnippetArticulation_checked_cc_o) $(SnippetArticulation_checked_c_o)
SnippetArticulation_checked_bin      := ./../../../Bin/linux32/SnippetArticulationCHECKED

clean_SnippetArticulation_checked: 
	@$(ECHO) clean SnippetArticulation checked
	@$(RMDIR) $(SnippetArticulation_checked_objsdir)
	@$(RMDIR) $(SnippetArticulation_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetArticulation/checked

build_SnippetArticulation_checked: postbuild_SnippetArticulation_checked
postbuild_SnippetArticulation_checked: mainbuild_SnippetArticulation_checked
	@cp -u "../../../../PxShared/bin/linux32/libPxFoundationCHECKED_x86.so" "../../../Bin/linux32/libPxFoundationCHECKED_x86.so"; cp -u "../../../../PxShared/bin/linux32/libPxPvdSDKCHECKED_x86.so" "../../../Bin/linux32/libPxPvdSDKCHECKED_x86.so"
mainbuild_SnippetArticulation_checked: prebuild_SnippetArticulation_checked $(SnippetArticulation_checked_bin)
prebuild_SnippetArticulation_checked:

$(SnippetArticulation_checked_bin): $(SnippetArticulation_checked_obj) build_SnippetRender_checked build_SnippetUtils_checked 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetArticulationCHECKED`
	$(CCLD) $(SnippetArticulation_checked_obj) $(SnippetArticulation_checked_lflags) -o $(SnippetArticulation_checked_bin) 
	$(ECHO) building $@ complete!

SnippetArticulation_checked_DEPDIR = $(dir $(@))/$(*F)
$(SnippetArticulation_checked_cpp_o): $(SnippetArticulation_checked_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cppfiles))))))
	cp $(SnippetArticulation_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  rm -f $(SnippetArticulation_checked_DEPDIR).d

$(SnippetArticulation_checked_cc_o): $(SnippetArticulation_checked_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_ccfiles))))))
	cp $(SnippetArticulation_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).checked.P; \
	  rm -f $(SnippetArticulation_checked_DEPDIR).d

$(SnippetArticulation_checked_c_o): $(SnippetArticulation_checked_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetArticulation_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cfiles))))))
	cp $(SnippetArticulation_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_checked_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  rm -f $(SnippetArticulation_checked_DEPDIR).d

SnippetArticulation_profile_hpaths    := 
SnippetArticulation_profile_hpaths    += ./../../../Include
SnippetArticulation_profile_hpaths    += ./../../../../PxShared/include
SnippetArticulation_profile_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetArticulation_profile_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetArticulation_profile_lpaths    := 
SnippetArticulation_profile_lpaths    += ./../../../Lib/linux32
SnippetArticulation_profile_lpaths    += ./../../lib/linux32
SnippetArticulation_profile_lpaths    += ./../../../Bin/linux32
SnippetArticulation_profile_lpaths    += ./../../../../PxShared/lib/linux32
SnippetArticulation_profile_lpaths    += ./../../../../PxShared/bin/linux32
SnippetArticulation_profile_lpaths    += ./../../lib/linux32
SnippetArticulation_profile_defines   := $(SnippetArticulation_custom_defines)
SnippetArticulation_profile_defines   += PHYSX_PROFILE_SDK
SnippetArticulation_profile_defines   += RENDER_SNIPPET
SnippetArticulation_profile_defines   += NDEBUG
SnippetArticulation_profile_defines   += PX_PROFILE=1
SnippetArticulation_profile_defines   += PX_SUPPORT_PVD=1
SnippetArticulation_profile_libraries := 
SnippetArticulation_profile_libraries += SnippetRenderPROFILE
SnippetArticulation_profile_libraries += SnippetUtilsPROFILE
SnippetArticulation_profile_libraries += PhysX3PROFILE_x86
SnippetArticulation_profile_libraries += PhysX3CookingPROFILE_x86
SnippetArticulation_profile_libraries += PhysX3CharacterKinematicPROFILE_x86
SnippetArticulation_profile_libraries += PhysX3ExtensionsPROFILE
SnippetArticulation_profile_libraries += PhysX3VehiclePROFILE
SnippetArticulation_profile_libraries += PxPvdSDKPROFILE_x86
SnippetArticulation_profile_libraries += PhysX3CommonPROFILE_x86
SnippetArticulation_profile_libraries += PxFoundationPROFILE_x86
SnippetArticulation_profile_libraries += PxTaskPROFILE
SnippetArticulation_profile_libraries += PsFastXmlPROFILE
SnippetArticulation_profile_libraries += SnippetUtilsPROFILE
SnippetArticulation_profile_libraries += SnippetRenderPROFILE
SnippetArticulation_profile_libraries += GL
SnippetArticulation_profile_libraries += GLU
SnippetArticulation_profile_libraries += glut
SnippetArticulation_profile_libraries += X11
SnippetArticulation_profile_libraries += rt
SnippetArticulation_profile_libraries += pthread
SnippetArticulation_profile_common_cflags	:= $(SnippetArticulation_custom_cflags)
SnippetArticulation_profile_common_cflags    += -MMD
SnippetArticulation_profile_common_cflags    += $(addprefix -D, $(SnippetArticulation_profile_defines))
SnippetArticulation_profile_common_cflags    += $(addprefix -I, $(SnippetArticulation_profile_hpaths))
SnippetArticulation_profile_common_cflags  += -m32
SnippetArticulation_profile_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetArticulation_profile_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetArticulation_profile_common_cflags  += -Wno-uninitialized
SnippetArticulation_profile_common_cflags  += -O3 -fno-strict-aliasing
SnippetArticulation_profile_cflags	:= $(SnippetArticulation_profile_common_cflags)
SnippetArticulation_profile_cppflags	:= $(SnippetArticulation_profile_common_cflags)
SnippetArticulation_profile_lflags    := $(SnippetArticulation_custom_lflags)
SnippetArticulation_profile_lflags    += $(addprefix -L, $(SnippetArticulation_profile_lpaths))
SnippetArticulation_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetArticulation_profile_libraries)) -Wl,--end-group
SnippetArticulation_profile_lflags  += -lrt
SnippetArticulation_profile_lflags  += -Wl,-rpath ./
SnippetArticulation_profile_lflags  += -m32
SnippetArticulation_profile_objsdir  = $(OBJS_DIR)/SnippetArticulation_profile
SnippetArticulation_profile_cpp_o    = $(addprefix $(SnippetArticulation_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_profile_cc_o    = $(addprefix $(SnippetArticulation_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_profile_c_o      = $(addprefix $(SnippetArticulation_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetArticulation_cfiles)))))
SnippetArticulation_profile_obj      = $(SnippetArticulation_profile_cpp_o) $(SnippetArticulation_profile_cc_o) $(SnippetArticulation_profile_c_o)
SnippetArticulation_profile_bin      := ./../../../Bin/linux32/SnippetArticulationPROFILE

clean_SnippetArticulation_profile: 
	@$(ECHO) clean SnippetArticulation profile
	@$(RMDIR) $(SnippetArticulation_profile_objsdir)
	@$(RMDIR) $(SnippetArticulation_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetArticulation/profile

build_SnippetArticulation_profile: postbuild_SnippetArticulation_profile
postbuild_SnippetArticulation_profile: mainbuild_SnippetArticulation_profile
	@cp -u "../../../../PxShared/bin/linux32/libPxFoundationPROFILE_x86.so" "../../../Bin/linux32/libPxFoundationPROFILE_x86.so"; cp -u "../../../../PxShared/bin/linux32/libPxPvdSDKPROFILE_x86.so" "../../../Bin/linux32/libPxPvdSDKPROFILE_x86.so"
mainbuild_SnippetArticulation_profile: prebuild_SnippetArticulation_profile $(SnippetArticulation_profile_bin)
prebuild_SnippetArticulation_profile:

$(SnippetArticulation_profile_bin): $(SnippetArticulation_profile_obj) build_SnippetRender_profile build_SnippetUtils_profile 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetArticulationPROFILE`
	$(CCLD) $(SnippetArticulation_profile_obj) $(SnippetArticulation_profile_lflags) -o $(SnippetArticulation_profile_bin) 
	$(ECHO) building $@ complete!

SnippetArticulation_profile_DEPDIR = $(dir $(@))/$(*F)
$(SnippetArticulation_profile_cpp_o): $(SnippetArticulation_profile_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cppfiles))))))
	cp $(SnippetArticulation_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  rm -f $(SnippetArticulation_profile_DEPDIR).d

$(SnippetArticulation_profile_cc_o): $(SnippetArticulation_profile_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_ccfiles))))))
	cp $(SnippetArticulation_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).profile.P; \
	  rm -f $(SnippetArticulation_profile_DEPDIR).d

$(SnippetArticulation_profile_c_o): $(SnippetArticulation_profile_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetArticulation_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cfiles))))))
	cp $(SnippetArticulation_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_profile_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  rm -f $(SnippetArticulation_profile_DEPDIR).d

SnippetArticulation_release_hpaths    := 
SnippetArticulation_release_hpaths    += ./../../../Include
SnippetArticulation_release_hpaths    += ./../../../../PxShared/include
SnippetArticulation_release_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetArticulation_release_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetArticulation_release_lpaths    := 
SnippetArticulation_release_lpaths    += ./../../../Lib/linux32
SnippetArticulation_release_lpaths    += ./../../lib/linux32
SnippetArticulation_release_lpaths    += ./../../../Bin/linux32
SnippetArticulation_release_lpaths    += ./../../../../PxShared/lib/linux32
SnippetArticulation_release_lpaths    += ./../../../../PxShared/bin/linux32
SnippetArticulation_release_lpaths    += ./../../lib/linux32
SnippetArticulation_release_defines   := $(SnippetArticulation_custom_defines)
SnippetArticulation_release_defines   += PHYSX_PROFILE_SDK
SnippetArticulation_release_defines   += RENDER_SNIPPET
SnippetArticulation_release_defines   += NDEBUG
SnippetArticulation_release_defines   += PX_SUPPORT_PVD=0
SnippetArticulation_release_libraries := 
SnippetArticulation_release_libraries += SnippetRender
SnippetArticulation_release_libraries += SnippetUtils
SnippetArticulation_release_libraries += PhysX3_x86
SnippetArticulation_release_libraries += PhysX3Cooking_x86
SnippetArticulation_release_libraries += PhysX3CharacterKinematic_x86
SnippetArticulation_release_libraries += PhysX3Extensions
SnippetArticulation_release_libraries += PhysX3Vehicle
SnippetArticulation_release_libraries += PxPvdSDK_x86
SnippetArticulation_release_libraries += PhysX3Common_x86
SnippetArticulation_release_libraries += PxFoundation_x86
SnippetArticulation_release_libraries += PxTask
SnippetArticulation_release_libraries += PsFastXml
SnippetArticulation_release_libraries += SnippetUtils
SnippetArticulation_release_libraries += SnippetRender
SnippetArticulation_release_libraries += GL
SnippetArticulation_release_libraries += GLU
SnippetArticulation_release_libraries += glut
SnippetArticulation_release_libraries += X11
SnippetArticulation_release_libraries += rt
SnippetArticulation_release_libraries += pthread
SnippetArticulation_release_common_cflags	:= $(SnippetArticulation_custom_cflags)
SnippetArticulation_release_common_cflags    += -MMD
SnippetArticulation_release_common_cflags    += $(addprefix -D, $(SnippetArticulation_release_defines))
SnippetArticulation_release_common_cflags    += $(addprefix -I, $(SnippetArticulation_release_hpaths))
SnippetArticulation_release_common_cflags  += -m32
SnippetArticulation_release_common_cflags  += -Werror -m32 -fPIC -msse2 -mfpmath=sse -malign-double -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetArticulation_release_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetArticulation_release_common_cflags  += -Wno-uninitialized
SnippetArticulation_release_common_cflags  += -O3 -fno-strict-aliasing
SnippetArticulation_release_cflags	:= $(SnippetArticulation_release_common_cflags)
SnippetArticulation_release_cppflags	:= $(SnippetArticulation_release_common_cflags)
SnippetArticulation_release_lflags    := $(SnippetArticulation_custom_lflags)
SnippetArticulation_release_lflags    += $(addprefix -L, $(SnippetArticulation_release_lpaths))
SnippetArticulation_release_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetArticulation_release_libraries)) -Wl,--end-group
SnippetArticulation_release_lflags  += -lrt
SnippetArticulation_release_lflags  += -Wl,-rpath ./
SnippetArticulation_release_lflags  += -m32
SnippetArticulation_release_objsdir  = $(OBJS_DIR)/SnippetArticulation_release
SnippetArticulation_release_cpp_o    = $(addprefix $(SnippetArticulation_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetArticulation_cppfiles)))))
SnippetArticulation_release_cc_o    = $(addprefix $(SnippetArticulation_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetArticulation_ccfiles)))))
SnippetArticulation_release_c_o      = $(addprefix $(SnippetArticulation_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetArticulation_cfiles)))))
SnippetArticulation_release_obj      = $(SnippetArticulation_release_cpp_o) $(SnippetArticulation_release_cc_o) $(SnippetArticulation_release_c_o)
SnippetArticulation_release_bin      := ./../../../Bin/linux32/SnippetArticulation

clean_SnippetArticulation_release: 
	@$(ECHO) clean SnippetArticulation release
	@$(RMDIR) $(SnippetArticulation_release_objsdir)
	@$(RMDIR) $(SnippetArticulation_release_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetArticulation/release

build_SnippetArticulation_release: postbuild_SnippetArticulation_release
postbuild_SnippetArticulation_release: mainbuild_SnippetArticulation_release
	@cp -u "../../../../PxShared/bin/linux32/libPxFoundation_x86.so" "../../../Bin/linux32/libPxFoundation_x86.so"; cp -u "../../../../PxShared/bin/linux32/libPxPvdSDK_x86.so" "../../../Bin/linux32/libPxPvdSDK_x86.so"
mainbuild_SnippetArticulation_release: prebuild_SnippetArticulation_release $(SnippetArticulation_release_bin)
prebuild_SnippetArticulation_release:

$(SnippetArticulation_release_bin): $(SnippetArticulation_release_obj) build_SnippetRender_release build_SnippetUtils_release 
	mkdir -p `dirname ./../../../Bin/linux32/SnippetArticulation`
	$(CCLD) $(SnippetArticulation_release_obj) $(SnippetArticulation_release_lflags) -o $(SnippetArticulation_release_bin) 
	$(ECHO) building $@ complete!

SnippetArticulation_release_DEPDIR = $(dir $(@))/$(*F)
$(SnippetArticulation_release_cpp_o): $(SnippetArticulation_release_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cppfiles))))))
	cp $(SnippetArticulation_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cppfiles))))).P; \
	  rm -f $(SnippetArticulation_release_DEPDIR).d

$(SnippetArticulation_release_cc_o): $(SnippetArticulation_release_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetArticulation_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_ccfiles))))))
	cp $(SnippetArticulation_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_ccfiles))))).release.P; \
	  rm -f $(SnippetArticulation_release_DEPDIR).d

$(SnippetArticulation_release_c_o): $(SnippetArticulation_release_objsdir)/%.o:
	$(ECHO) SnippetArticulation: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetArticulation_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cfiles))))))
	cp $(SnippetArticulation_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetArticulation_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetArticulation/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetArticulation_release_objsdir),, $@))), $(SnippetArticulation_cfiles))))).P; \
	  rm -f $(SnippetArticulation_release_DEPDIR).d

clean_SnippetArticulation:  clean_SnippetArticulation_debug clean_SnippetArticulation_checked clean_SnippetArticulation_profile clean_SnippetArticulation_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
