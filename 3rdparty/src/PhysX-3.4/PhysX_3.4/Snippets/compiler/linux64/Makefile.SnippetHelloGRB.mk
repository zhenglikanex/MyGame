# Makefile generated by XPJ for LINUX64
-include Makefile.custom
ProjectName = SnippetHelloGRB
SnippetHelloGRB_cppfiles   += ./../../SnippetCommon/ClassicMain.cpp
SnippetHelloGRB_cppfiles   += ./../../SnippetHelloGRB/SnippetHelloGRB.cpp
SnippetHelloGRB_cppfiles   += ./../../SnippetHelloGRB/SnippetHelloGRBRender.cpp

SnippetHelloGRB_cpp_debug_dep    = $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_c_debug_dep      = $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_debug_dep      = $(SnippetHelloGRB_cpp_debug_dep) $(SnippetHelloGRB_cc_debug_dep) $(SnippetHelloGRB_c_debug_dep)
-include $(SnippetHelloGRB_debug_dep)
SnippetHelloGRB_cpp_checked_dep    = $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_cc_checked_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.checked.P, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_c_checked_dep      = $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_checked_dep      = $(SnippetHelloGRB_cpp_checked_dep) $(SnippetHelloGRB_cc_checked_dep) $(SnippetHelloGRB_c_checked_dep)
-include $(SnippetHelloGRB_checked_dep)
SnippetHelloGRB_cpp_profile_dep    = $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_cc_profile_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.profile.P, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_c_profile_dep      = $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_profile_dep      = $(SnippetHelloGRB_cpp_profile_dep) $(SnippetHelloGRB_cc_profile_dep) $(SnippetHelloGRB_c_profile_dep)
-include $(SnippetHelloGRB_profile_dep)
SnippetHelloGRB_cpp_release_dep    = $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_c_release_dep      = $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_release_dep      = $(SnippetHelloGRB_cpp_release_dep) $(SnippetHelloGRB_cc_release_dep) $(SnippetHelloGRB_c_release_dep)
-include $(SnippetHelloGRB_release_dep)
SnippetHelloGRB_debug_hpaths    := 
SnippetHelloGRB_debug_hpaths    += ./../../../Include
SnippetHelloGRB_debug_hpaths    += ./../../../../PxShared/include
SnippetHelloGRB_debug_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetHelloGRB_debug_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetHelloGRB_debug_lpaths    := 
SnippetHelloGRB_debug_lpaths    += ./../../../Lib/linux64
SnippetHelloGRB_debug_lpaths    += ./../../lib/linux64
SnippetHelloGRB_debug_lpaths    += ./../../../Bin/linux64
SnippetHelloGRB_debug_lpaths    += ./../../../../PxShared/lib/linux64
SnippetHelloGRB_debug_lpaths    += ./../../../../PxShared/bin/linux64
SnippetHelloGRB_debug_lpaths    += ./../../lib/linux64
SnippetHelloGRB_debug_defines   := $(SnippetHelloGRB_custom_defines)
SnippetHelloGRB_debug_defines   += PHYSX_PROFILE_SDK
SnippetHelloGRB_debug_defines   += RENDER_SNIPPET
SnippetHelloGRB_debug_defines   += _DEBUG
SnippetHelloGRB_debug_defines   += PX_DEBUG=1
SnippetHelloGRB_debug_defines   += PX_CHECKED=1
SnippetHelloGRB_debug_defines   += PX_SUPPORT_PVD=1
SnippetHelloGRB_debug_libraries := 
SnippetHelloGRB_debug_libraries += SnippetRenderDEBUG
SnippetHelloGRB_debug_libraries += SnippetUtilsDEBUG
SnippetHelloGRB_debug_libraries += PhysX3DEBUG_x64
SnippetHelloGRB_debug_libraries += PhysX3CookingDEBUG_x64
SnippetHelloGRB_debug_libraries += PhysX3CharacterKinematicDEBUG_x64
SnippetHelloGRB_debug_libraries += PhysX3ExtensionsDEBUG
SnippetHelloGRB_debug_libraries += PhysX3VehicleDEBUG
SnippetHelloGRB_debug_libraries += PxPvdSDKDEBUG_x64
SnippetHelloGRB_debug_libraries += PhysX3CommonDEBUG_x64
SnippetHelloGRB_debug_libraries += PxFoundationDEBUG_x64
SnippetHelloGRB_debug_libraries += PxTaskDEBUG
SnippetHelloGRB_debug_libraries += PsFastXmlDEBUG
SnippetHelloGRB_debug_libraries += SnippetUtilsDEBUG
SnippetHelloGRB_debug_libraries += SnippetRenderDEBUG
SnippetHelloGRB_debug_libraries += GL
SnippetHelloGRB_debug_libraries += GLU
SnippetHelloGRB_debug_libraries += glut
SnippetHelloGRB_debug_libraries += X11
SnippetHelloGRB_debug_libraries += rt
SnippetHelloGRB_debug_libraries += pthread
SnippetHelloGRB_debug_common_cflags	:= $(SnippetHelloGRB_custom_cflags)
SnippetHelloGRB_debug_common_cflags    += -MMD
SnippetHelloGRB_debug_common_cflags    += $(addprefix -D, $(SnippetHelloGRB_debug_defines))
SnippetHelloGRB_debug_common_cflags    += $(addprefix -I, $(SnippetHelloGRB_debug_hpaths))
SnippetHelloGRB_debug_common_cflags  += -m64
SnippetHelloGRB_debug_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetHelloGRB_debug_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetHelloGRB_debug_common_cflags  += -Wno-uninitialized
SnippetHelloGRB_debug_common_cflags  += -g3 -gdwarf-2
SnippetHelloGRB_debug_cflags	:= $(SnippetHelloGRB_debug_common_cflags)
SnippetHelloGRB_debug_cppflags	:= $(SnippetHelloGRB_debug_common_cflags)
SnippetHelloGRB_debug_lflags    := $(SnippetHelloGRB_custom_lflags)
SnippetHelloGRB_debug_lflags    += $(addprefix -L, $(SnippetHelloGRB_debug_lpaths))
SnippetHelloGRB_debug_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloGRB_debug_libraries)) -Wl,--end-group
SnippetHelloGRB_debug_lflags  += -lrt
SnippetHelloGRB_debug_lflags  += -Wl,-rpath ./
SnippetHelloGRB_debug_lflags  += -m64
SnippetHelloGRB_debug_objsdir  = $(OBJS_DIR)/SnippetHelloGRB_debug
SnippetHelloGRB_debug_cpp_o    = $(addprefix $(SnippetHelloGRB_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_debug_cc_o    = $(addprefix $(SnippetHelloGRB_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_debug_c_o      = $(addprefix $(SnippetHelloGRB_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_debug_obj      = $(SnippetHelloGRB_debug_cpp_o) $(SnippetHelloGRB_debug_cc_o) $(SnippetHelloGRB_debug_c_o)
SnippetHelloGRB_debug_bin      := ./../../../Bin/linux64/SnippetHelloGRBDEBUG

clean_SnippetHelloGRB_debug: 
	@$(ECHO) clean SnippetHelloGRB debug
	@$(RMDIR) $(SnippetHelloGRB_debug_objsdir)
	@$(RMDIR) $(SnippetHelloGRB_debug_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloGRB/debug

build_SnippetHelloGRB_debug: postbuild_SnippetHelloGRB_debug
postbuild_SnippetHelloGRB_debug: mainbuild_SnippetHelloGRB_debug
	@cp -u "../../../../PxShared/bin/linux64/libPxFoundationDEBUG_x64.so" "../../../Bin/linux64/libPxFoundationDEBUG_x64.so"; cp -u "../../../../PxShared/bin/linux64/libPxPvdSDKDEBUG_x64.so" "../../../Bin/linux64/libPxPvdSDKDEBUG_x64.so"
mainbuild_SnippetHelloGRB_debug: prebuild_SnippetHelloGRB_debug $(SnippetHelloGRB_debug_bin)
prebuild_SnippetHelloGRB_debug:

$(SnippetHelloGRB_debug_bin): $(SnippetHelloGRB_debug_obj) build_SnippetRender_debug build_SnippetUtils_debug 
	mkdir -p `dirname ./../../../Bin/linux64/SnippetHelloGRBDEBUG`
	$(CCLD) $(SnippetHelloGRB_debug_obj) $(SnippetHelloGRB_debug_lflags) -o $(SnippetHelloGRB_debug_bin) 
	$(ECHO) building $@ complete!

SnippetHelloGRB_debug_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloGRB_debug_cpp_o): $(SnippetHelloGRB_debug_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))))
	cp $(SnippetHelloGRB_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  rm -f $(SnippetHelloGRB_debug_DEPDIR).d

$(SnippetHelloGRB_debug_cc_o): $(SnippetHelloGRB_debug_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))))
	cp $(SnippetHelloGRB_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).debug.P; \
	  rm -f $(SnippetHelloGRB_debug_DEPDIR).d

$(SnippetHelloGRB_debug_c_o): $(SnippetHelloGRB_debug_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloGRB_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))))
	cp $(SnippetHelloGRB_debug_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_debug_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  rm -f $(SnippetHelloGRB_debug_DEPDIR).d

SnippetHelloGRB_checked_hpaths    := 
SnippetHelloGRB_checked_hpaths    += ./../../../Include
SnippetHelloGRB_checked_hpaths    += ./../../../../PxShared/include
SnippetHelloGRB_checked_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetHelloGRB_checked_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetHelloGRB_checked_lpaths    := 
SnippetHelloGRB_checked_lpaths    += ./../../../Lib/linux64
SnippetHelloGRB_checked_lpaths    += ./../../lib/linux64
SnippetHelloGRB_checked_lpaths    += ./../../../Bin/linux64
SnippetHelloGRB_checked_lpaths    += ./../../../../PxShared/lib/linux64
SnippetHelloGRB_checked_lpaths    += ./../../../../PxShared/bin/linux64
SnippetHelloGRB_checked_lpaths    += ./../../lib/linux64
SnippetHelloGRB_checked_defines   := $(SnippetHelloGRB_custom_defines)
SnippetHelloGRB_checked_defines   += PHYSX_PROFILE_SDK
SnippetHelloGRB_checked_defines   += RENDER_SNIPPET
SnippetHelloGRB_checked_defines   += NDEBUG
SnippetHelloGRB_checked_defines   += PX_CHECKED=1
SnippetHelloGRB_checked_defines   += PX_SUPPORT_PVD=1
SnippetHelloGRB_checked_libraries := 
SnippetHelloGRB_checked_libraries += SnippetRenderCHECKED
SnippetHelloGRB_checked_libraries += SnippetUtilsCHECKED
SnippetHelloGRB_checked_libraries += PhysX3CHECKED_x64
SnippetHelloGRB_checked_libraries += PhysX3CookingCHECKED_x64
SnippetHelloGRB_checked_libraries += PhysX3CharacterKinematicCHECKED_x64
SnippetHelloGRB_checked_libraries += PhysX3ExtensionsCHECKED
SnippetHelloGRB_checked_libraries += PhysX3VehicleCHECKED
SnippetHelloGRB_checked_libraries += PxPvdSDKCHECKED_x64
SnippetHelloGRB_checked_libraries += PhysX3CommonCHECKED_x64
SnippetHelloGRB_checked_libraries += PxFoundationCHECKED_x64
SnippetHelloGRB_checked_libraries += PxTaskCHECKED
SnippetHelloGRB_checked_libraries += PsFastXmlCHECKED
SnippetHelloGRB_checked_libraries += SnippetUtilsCHECKED
SnippetHelloGRB_checked_libraries += SnippetRenderCHECKED
SnippetHelloGRB_checked_libraries += GL
SnippetHelloGRB_checked_libraries += GLU
SnippetHelloGRB_checked_libraries += glut
SnippetHelloGRB_checked_libraries += X11
SnippetHelloGRB_checked_libraries += rt
SnippetHelloGRB_checked_libraries += pthread
SnippetHelloGRB_checked_common_cflags	:= $(SnippetHelloGRB_custom_cflags)
SnippetHelloGRB_checked_common_cflags    += -MMD
SnippetHelloGRB_checked_common_cflags    += $(addprefix -D, $(SnippetHelloGRB_checked_defines))
SnippetHelloGRB_checked_common_cflags    += $(addprefix -I, $(SnippetHelloGRB_checked_hpaths))
SnippetHelloGRB_checked_common_cflags  += -m64
SnippetHelloGRB_checked_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetHelloGRB_checked_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetHelloGRB_checked_common_cflags  += -Wno-uninitialized
SnippetHelloGRB_checked_common_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
SnippetHelloGRB_checked_cflags	:= $(SnippetHelloGRB_checked_common_cflags)
SnippetHelloGRB_checked_cppflags	:= $(SnippetHelloGRB_checked_common_cflags)
SnippetHelloGRB_checked_lflags    := $(SnippetHelloGRB_custom_lflags)
SnippetHelloGRB_checked_lflags    += $(addprefix -L, $(SnippetHelloGRB_checked_lpaths))
SnippetHelloGRB_checked_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloGRB_checked_libraries)) -Wl,--end-group
SnippetHelloGRB_checked_lflags  += -lrt
SnippetHelloGRB_checked_lflags  += -Wl,-rpath ./
SnippetHelloGRB_checked_lflags  += -m64
SnippetHelloGRB_checked_objsdir  = $(OBJS_DIR)/SnippetHelloGRB_checked
SnippetHelloGRB_checked_cpp_o    = $(addprefix $(SnippetHelloGRB_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_checked_cc_o    = $(addprefix $(SnippetHelloGRB_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_checked_c_o      = $(addprefix $(SnippetHelloGRB_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_checked_obj      = $(SnippetHelloGRB_checked_cpp_o) $(SnippetHelloGRB_checked_cc_o) $(SnippetHelloGRB_checked_c_o)
SnippetHelloGRB_checked_bin      := ./../../../Bin/linux64/SnippetHelloGRBCHECKED

clean_SnippetHelloGRB_checked: 
	@$(ECHO) clean SnippetHelloGRB checked
	@$(RMDIR) $(SnippetHelloGRB_checked_objsdir)
	@$(RMDIR) $(SnippetHelloGRB_checked_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloGRB/checked

build_SnippetHelloGRB_checked: postbuild_SnippetHelloGRB_checked
postbuild_SnippetHelloGRB_checked: mainbuild_SnippetHelloGRB_checked
	@cp -u "../../../../PxShared/bin/linux64/libPxFoundationCHECKED_x64.so" "../../../Bin/linux64/libPxFoundationCHECKED_x64.so"; cp -u "../../../../PxShared/bin/linux64/libPxPvdSDKCHECKED_x64.so" "../../../Bin/linux64/libPxPvdSDKCHECKED_x64.so"
mainbuild_SnippetHelloGRB_checked: prebuild_SnippetHelloGRB_checked $(SnippetHelloGRB_checked_bin)
prebuild_SnippetHelloGRB_checked:

$(SnippetHelloGRB_checked_bin): $(SnippetHelloGRB_checked_obj) build_SnippetRender_checked build_SnippetUtils_checked 
	mkdir -p `dirname ./../../../Bin/linux64/SnippetHelloGRBCHECKED`
	$(CCLD) $(SnippetHelloGRB_checked_obj) $(SnippetHelloGRB_checked_lflags) -o $(SnippetHelloGRB_checked_bin) 
	$(ECHO) building $@ complete!

SnippetHelloGRB_checked_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloGRB_checked_cpp_o): $(SnippetHelloGRB_checked_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_checked_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))))
	cp $(SnippetHelloGRB_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  rm -f $(SnippetHelloGRB_checked_DEPDIR).d

$(SnippetHelloGRB_checked_cc_o): $(SnippetHelloGRB_checked_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling checked $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_checked_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))))
	cp $(SnippetHelloGRB_checked_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).checked.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).checked.P; \
	  rm -f $(SnippetHelloGRB_checked_DEPDIR).d

$(SnippetHelloGRB_checked_c_o): $(SnippetHelloGRB_checked_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloGRB_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))))
	cp $(SnippetHelloGRB_checked_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_checked_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/checked/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_checked_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  rm -f $(SnippetHelloGRB_checked_DEPDIR).d

SnippetHelloGRB_profile_hpaths    := 
SnippetHelloGRB_profile_hpaths    += ./../../../Include
SnippetHelloGRB_profile_hpaths    += ./../../../../PxShared/include
SnippetHelloGRB_profile_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetHelloGRB_profile_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetHelloGRB_profile_lpaths    := 
SnippetHelloGRB_profile_lpaths    += ./../../../Lib/linux64
SnippetHelloGRB_profile_lpaths    += ./../../lib/linux64
SnippetHelloGRB_profile_lpaths    += ./../../../Bin/linux64
SnippetHelloGRB_profile_lpaths    += ./../../../../PxShared/lib/linux64
SnippetHelloGRB_profile_lpaths    += ./../../../../PxShared/bin/linux64
SnippetHelloGRB_profile_lpaths    += ./../../lib/linux64
SnippetHelloGRB_profile_defines   := $(SnippetHelloGRB_custom_defines)
SnippetHelloGRB_profile_defines   += PHYSX_PROFILE_SDK
SnippetHelloGRB_profile_defines   += RENDER_SNIPPET
SnippetHelloGRB_profile_defines   += NDEBUG
SnippetHelloGRB_profile_defines   += PX_PROFILE=1
SnippetHelloGRB_profile_defines   += PX_SUPPORT_PVD=1
SnippetHelloGRB_profile_libraries := 
SnippetHelloGRB_profile_libraries += SnippetRenderPROFILE
SnippetHelloGRB_profile_libraries += SnippetUtilsPROFILE
SnippetHelloGRB_profile_libraries += PhysX3PROFILE_x64
SnippetHelloGRB_profile_libraries += PhysX3CookingPROFILE_x64
SnippetHelloGRB_profile_libraries += PhysX3CharacterKinematicPROFILE_x64
SnippetHelloGRB_profile_libraries += PhysX3ExtensionsPROFILE
SnippetHelloGRB_profile_libraries += PhysX3VehiclePROFILE
SnippetHelloGRB_profile_libraries += PxPvdSDKPROFILE_x64
SnippetHelloGRB_profile_libraries += PhysX3CommonPROFILE_x64
SnippetHelloGRB_profile_libraries += PxFoundationPROFILE_x64
SnippetHelloGRB_profile_libraries += PxTaskPROFILE
SnippetHelloGRB_profile_libraries += PsFastXmlPROFILE
SnippetHelloGRB_profile_libraries += SnippetUtilsPROFILE
SnippetHelloGRB_profile_libraries += SnippetRenderPROFILE
SnippetHelloGRB_profile_libraries += GL
SnippetHelloGRB_profile_libraries += GLU
SnippetHelloGRB_profile_libraries += glut
SnippetHelloGRB_profile_libraries += X11
SnippetHelloGRB_profile_libraries += rt
SnippetHelloGRB_profile_libraries += pthread
SnippetHelloGRB_profile_common_cflags	:= $(SnippetHelloGRB_custom_cflags)
SnippetHelloGRB_profile_common_cflags    += -MMD
SnippetHelloGRB_profile_common_cflags    += $(addprefix -D, $(SnippetHelloGRB_profile_defines))
SnippetHelloGRB_profile_common_cflags    += $(addprefix -I, $(SnippetHelloGRB_profile_hpaths))
SnippetHelloGRB_profile_common_cflags  += -m64
SnippetHelloGRB_profile_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetHelloGRB_profile_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetHelloGRB_profile_common_cflags  += -Wno-uninitialized
SnippetHelloGRB_profile_common_cflags  += -O3 -fno-strict-aliasing
SnippetHelloGRB_profile_cflags	:= $(SnippetHelloGRB_profile_common_cflags)
SnippetHelloGRB_profile_cppflags	:= $(SnippetHelloGRB_profile_common_cflags)
SnippetHelloGRB_profile_lflags    := $(SnippetHelloGRB_custom_lflags)
SnippetHelloGRB_profile_lflags    += $(addprefix -L, $(SnippetHelloGRB_profile_lpaths))
SnippetHelloGRB_profile_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloGRB_profile_libraries)) -Wl,--end-group
SnippetHelloGRB_profile_lflags  += -lrt
SnippetHelloGRB_profile_lflags  += -Wl,-rpath ./
SnippetHelloGRB_profile_lflags  += -m64
SnippetHelloGRB_profile_objsdir  = $(OBJS_DIR)/SnippetHelloGRB_profile
SnippetHelloGRB_profile_cpp_o    = $(addprefix $(SnippetHelloGRB_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_profile_cc_o    = $(addprefix $(SnippetHelloGRB_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_profile_c_o      = $(addprefix $(SnippetHelloGRB_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_profile_obj      = $(SnippetHelloGRB_profile_cpp_o) $(SnippetHelloGRB_profile_cc_o) $(SnippetHelloGRB_profile_c_o)
SnippetHelloGRB_profile_bin      := ./../../../Bin/linux64/SnippetHelloGRBPROFILE

clean_SnippetHelloGRB_profile: 
	@$(ECHO) clean SnippetHelloGRB profile
	@$(RMDIR) $(SnippetHelloGRB_profile_objsdir)
	@$(RMDIR) $(SnippetHelloGRB_profile_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloGRB/profile

build_SnippetHelloGRB_profile: postbuild_SnippetHelloGRB_profile
postbuild_SnippetHelloGRB_profile: mainbuild_SnippetHelloGRB_profile
	@cp -u "../../../../PxShared/bin/linux64/libPxFoundationPROFILE_x64.so" "../../../Bin/linux64/libPxFoundationPROFILE_x64.so"; cp -u "../../../../PxShared/bin/linux64/libPxPvdSDKPROFILE_x64.so" "../../../Bin/linux64/libPxPvdSDKPROFILE_x64.so"
mainbuild_SnippetHelloGRB_profile: prebuild_SnippetHelloGRB_profile $(SnippetHelloGRB_profile_bin)
prebuild_SnippetHelloGRB_profile:

$(SnippetHelloGRB_profile_bin): $(SnippetHelloGRB_profile_obj) build_SnippetRender_profile build_SnippetUtils_profile 
	mkdir -p `dirname ./../../../Bin/linux64/SnippetHelloGRBPROFILE`
	$(CCLD) $(SnippetHelloGRB_profile_obj) $(SnippetHelloGRB_profile_lflags) -o $(SnippetHelloGRB_profile_bin) 
	$(ECHO) building $@ complete!

SnippetHelloGRB_profile_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloGRB_profile_cpp_o): $(SnippetHelloGRB_profile_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_profile_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))))
	cp $(SnippetHelloGRB_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  rm -f $(SnippetHelloGRB_profile_DEPDIR).d

$(SnippetHelloGRB_profile_cc_o): $(SnippetHelloGRB_profile_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling profile $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_profile_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))))
	cp $(SnippetHelloGRB_profile_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).profile.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).profile.P; \
	  rm -f $(SnippetHelloGRB_profile_DEPDIR).d

$(SnippetHelloGRB_profile_c_o): $(SnippetHelloGRB_profile_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloGRB_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))))
	cp $(SnippetHelloGRB_profile_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_profile_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/profile/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_profile_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  rm -f $(SnippetHelloGRB_profile_DEPDIR).d

SnippetHelloGRB_release_hpaths    := 
SnippetHelloGRB_release_hpaths    += ./../../../Include
SnippetHelloGRB_release_hpaths    += ./../../../../PxShared/include
SnippetHelloGRB_release_hpaths    += ./../../../../PxShared/src/foundation/include
SnippetHelloGRB_release_hpaths    += ./../../../../PxShared/src/fastxml/include
SnippetHelloGRB_release_lpaths    := 
SnippetHelloGRB_release_lpaths    += ./../../../Lib/linux64
SnippetHelloGRB_release_lpaths    += ./../../lib/linux64
SnippetHelloGRB_release_lpaths    += ./../../../Bin/linux64
SnippetHelloGRB_release_lpaths    += ./../../../../PxShared/lib/linux64
SnippetHelloGRB_release_lpaths    += ./../../../../PxShared/bin/linux64
SnippetHelloGRB_release_lpaths    += ./../../lib/linux64
SnippetHelloGRB_release_defines   := $(SnippetHelloGRB_custom_defines)
SnippetHelloGRB_release_defines   += PHYSX_PROFILE_SDK
SnippetHelloGRB_release_defines   += RENDER_SNIPPET
SnippetHelloGRB_release_defines   += NDEBUG
SnippetHelloGRB_release_defines   += PX_SUPPORT_PVD=0
SnippetHelloGRB_release_libraries := 
SnippetHelloGRB_release_libraries += SnippetRender
SnippetHelloGRB_release_libraries += SnippetUtils
SnippetHelloGRB_release_libraries += PhysX3_x64
SnippetHelloGRB_release_libraries += PhysX3Cooking_x64
SnippetHelloGRB_release_libraries += PhysX3CharacterKinematic_x64
SnippetHelloGRB_release_libraries += PhysX3Extensions
SnippetHelloGRB_release_libraries += PhysX3Vehicle
SnippetHelloGRB_release_libraries += PxPvdSDK_x64
SnippetHelloGRB_release_libraries += PhysX3Common_x64
SnippetHelloGRB_release_libraries += PxFoundation_x64
SnippetHelloGRB_release_libraries += PxTask
SnippetHelloGRB_release_libraries += PsFastXml
SnippetHelloGRB_release_libraries += SnippetUtils
SnippetHelloGRB_release_libraries += SnippetRender
SnippetHelloGRB_release_libraries += GL
SnippetHelloGRB_release_libraries += GLU
SnippetHelloGRB_release_libraries += glut
SnippetHelloGRB_release_libraries += X11
SnippetHelloGRB_release_libraries += rt
SnippetHelloGRB_release_libraries += pthread
SnippetHelloGRB_release_common_cflags	:= $(SnippetHelloGRB_custom_cflags)
SnippetHelloGRB_release_common_cflags    += -MMD
SnippetHelloGRB_release_common_cflags    += $(addprefix -D, $(SnippetHelloGRB_release_defines))
SnippetHelloGRB_release_common_cflags    += $(addprefix -I, $(SnippetHelloGRB_release_hpaths))
SnippetHelloGRB_release_common_cflags  += -m64
SnippetHelloGRB_release_common_cflags  += -Werror -m64 -fPIC -msse2 -mfpmath=sse -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden
SnippetHelloGRB_release_common_cflags  += -Wall -Wextra -Wstrict-aliasing=2 -fdiagnostics-show-option
SnippetHelloGRB_release_common_cflags  += -Wno-uninitialized
SnippetHelloGRB_release_common_cflags  += -O3 -fno-strict-aliasing
SnippetHelloGRB_release_cflags	:= $(SnippetHelloGRB_release_common_cflags)
SnippetHelloGRB_release_cppflags	:= $(SnippetHelloGRB_release_common_cflags)
SnippetHelloGRB_release_lflags    := $(SnippetHelloGRB_custom_lflags)
SnippetHelloGRB_release_lflags    += $(addprefix -L, $(SnippetHelloGRB_release_lpaths))
SnippetHelloGRB_release_lflags    += -Wl,--start-group $(addprefix -l, $(SnippetHelloGRB_release_libraries)) -Wl,--end-group
SnippetHelloGRB_release_lflags  += -lrt
SnippetHelloGRB_release_lflags  += -Wl,-rpath ./
SnippetHelloGRB_release_lflags  += -m64
SnippetHelloGRB_release_objsdir  = $(OBJS_DIR)/SnippetHelloGRB_release
SnippetHelloGRB_release_cpp_o    = $(addprefix $(SnippetHelloGRB_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(SnippetHelloGRB_cppfiles)))))
SnippetHelloGRB_release_cc_o    = $(addprefix $(SnippetHelloGRB_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(SnippetHelloGRB_ccfiles)))))
SnippetHelloGRB_release_c_o      = $(addprefix $(SnippetHelloGRB_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(SnippetHelloGRB_cfiles)))))
SnippetHelloGRB_release_obj      = $(SnippetHelloGRB_release_cpp_o) $(SnippetHelloGRB_release_cc_o) $(SnippetHelloGRB_release_c_o)
SnippetHelloGRB_release_bin      := ./../../../Bin/linux64/SnippetHelloGRB

clean_SnippetHelloGRB_release: 
	@$(ECHO) clean SnippetHelloGRB release
	@$(RMDIR) $(SnippetHelloGRB_release_objsdir)
	@$(RMDIR) $(SnippetHelloGRB_release_bin)
	@$(RMDIR) $(DEPSDIR)/SnippetHelloGRB/release

build_SnippetHelloGRB_release: postbuild_SnippetHelloGRB_release
postbuild_SnippetHelloGRB_release: mainbuild_SnippetHelloGRB_release
	@cp -u "../../../../PxShared/bin/linux64/libPxFoundation_x64.so" "../../../Bin/linux64/libPxFoundation_x64.so"; cp -u "../../../../PxShared/bin/linux64/libPxPvdSDK_x64.so" "../../../Bin/linux64/libPxPvdSDK_x64.so"
mainbuild_SnippetHelloGRB_release: prebuild_SnippetHelloGRB_release $(SnippetHelloGRB_release_bin)
prebuild_SnippetHelloGRB_release:

$(SnippetHelloGRB_release_bin): $(SnippetHelloGRB_release_obj) build_SnippetRender_release build_SnippetUtils_release 
	mkdir -p `dirname ./../../../Bin/linux64/SnippetHelloGRB`
	$(CCLD) $(SnippetHelloGRB_release_obj) $(SnippetHelloGRB_release_lflags) -o $(SnippetHelloGRB_release_bin) 
	$(ECHO) building $@ complete!

SnippetHelloGRB_release_DEPDIR = $(dir $(@))/$(*F)
$(SnippetHelloGRB_release_cpp_o): $(SnippetHelloGRB_release_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))))
	cp $(SnippetHelloGRB_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cppfiles))))).P; \
	  rm -f $(SnippetHelloGRB_release_DEPDIR).d

$(SnippetHelloGRB_release_cc_o): $(SnippetHelloGRB_release_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(SnippetHelloGRB_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))))
	cp $(SnippetHelloGRB_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_ccfiles))))).release.P; \
	  rm -f $(SnippetHelloGRB_release_DEPDIR).d

$(SnippetHelloGRB_release_c_o): $(SnippetHelloGRB_release_objsdir)/%.o:
	$(ECHO) SnippetHelloGRB: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(SnippetHelloGRB_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))))
	cp $(SnippetHelloGRB_release_DEPDIR).d $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(SnippetHelloGRB_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/SnippetHelloGRB/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(SnippetHelloGRB_release_objsdir),, $@))), $(SnippetHelloGRB_cfiles))))).P; \
	  rm -f $(SnippetHelloGRB_release_DEPDIR).d

clean_SnippetHelloGRB:  clean_SnippetHelloGRB_debug clean_SnippetHelloGRB_checked clean_SnippetHelloGRB_profile clean_SnippetHelloGRB_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
