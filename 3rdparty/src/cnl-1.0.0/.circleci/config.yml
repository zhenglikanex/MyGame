version: 2

general:
  branches:
    ignore:
      - gh-pages

jobs:
  "cmake-install":
    docker:
      - image: ubuntu:16.04
    steps:
      - checkout
      - run:
          name: Setup system to install CNL
          command: apt update --quiet && apt install --yes cmake g++
      - run:
          name: Install CNL
          command: cmake . && cmake --build . --target install

  "cmake-test-gcc":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-head
    steps:
      - checkout
      - run:
          name: Setup system to test CNL
          command: apt update --quiet && apt install --yes cmake git
      - run:
          name: Build/install GTest
          command: >
            git clone --branch release-1.10.0 https://github.com/google/googletest.git &&
            cd googletest &&
            mkdir build &&
            cd build &&
            cmake .. &&
            cmake --build . --target install -- --jobs 2
      - run:
          name: Test CNL
          command: >
            mkdir build &&
            cd build &&
            cmake -DCMAKE_EXE_LINKER_FLAGS="-static-libstdc++" .. &&
            cmake --build . --target test-all -- --jobs 2 &&
            ctest --output-on-failure --parallel 2

  "cmake-test-clang":
    docker:
      - image: johnmcfarlane/cnl_ci:clang-head
    steps:
      - checkout
      - run:
          name: Setup system to test CNL
          command: apt update --quiet && apt install --yes binutils cmake git
      - run:
          name: Build/install GTest
          command: >
            git clone --branch release-1.10.0 https://github.com/google/googletest.git &&
            cd googletest &&
            mkdir build &&
            cd build &&
            cmake .. &&
            cmake --build . --target install -- --jobs 2
      - run:
          name: Test CNL
          command: >
            mkdir build &&
            cd build &&
            cmake -DCMAKE_TOOLCHAIN_FILE="${CIRCLE_WORKING_DIRECTORY}/test/cmake/toolchain/clang.cmake" .. &&
            cmake --build . --target test-all -- --jobs 2 &&
            ctest --output-on-failure --parallel 2

  "c++20":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-10
    steps:
      - checkout
      - run:
          name: Run tests
          command: NUM_CPUS=2 . /root/project/.circleci/test.sh 20

  "c++17-arm7":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-10
    steps:
      - checkout
      - run:
          name: Run tests
          command: NUM_CPUS=2 . /root/project/.circleci/test-arm.sh
          no_output_timeout: 20m

  "c++17":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-10
    steps:
      - checkout
      - run:
          name: Run tests
          command: NUM_CPUS=2 . /root/project/.circleci/test.sh 17

  "c++14":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-10
    steps:
      - checkout
      - run:
          name: Run tests
          command: NUM_CPUS=2 . /root/project/.circleci/test.sh 14

  "c++11":
    docker:
      - image: johnmcfarlane/cnl_ci:gcc-10
    steps:
      - checkout
      - run:
          name: Run tests
          command: NUM_CPUS=2 . /root/project/.circleci/test.sh 11

workflows:
  version: 2
  build:
    jobs:
      - "cmake-install"
      - "cmake-test-gcc"
      - "cmake-test-clang"
      - "c++20"
      - "c++17"
      - "c++14"
      - "c++11"
      - "c++17-arm7"
