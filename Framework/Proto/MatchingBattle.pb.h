// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchingBattle.proto

#ifndef PROTOBUF_MatchingBattle_2eproto__INCLUDED
#define PROTOBUF_MatchingBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "UserData.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MatchingBattle_2eproto();
void protobuf_AssignDesc_MatchingBattle_2eproto();
void protobuf_ShutdownFile_MatchingBattle_2eproto();

class EnterSelectHeroRoom;
class LoadBattleSceneBegin;
class ReqLoadBattleSceneEnd;
class ReqMatchingBattle;
class ReqSelectHero;
class RspLoadBattleSceneEnd;
class RspMathingBattle;
class RspSelectHero;
class UpdateRoomEnemyHero;

// ===================================================================

class ReqMatchingBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqMatchingBattle) */ {
 public:
  ReqMatchingBattle();
  virtual ~ReqMatchingBattle();

  ReqMatchingBattle(const ReqMatchingBattle& from);

  inline ReqMatchingBattle& operator=(const ReqMatchingBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMatchingBattle& default_instance();

  void Swap(ReqMatchingBattle* other);

  // implements Message ----------------------------------------------

  inline ReqMatchingBattle* New() const { return New(NULL); }

  ReqMatchingBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMatchingBattle& from);
  void MergeFrom(const ReqMatchingBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqMatchingBattle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ReqMatchingBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static ReqMatchingBattle* default_instance_;
};
// -------------------------------------------------------------------

class RspMathingBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RspMathingBattle) */ {
 public:
  RspMathingBattle();
  virtual ~RspMathingBattle();

  RspMathingBattle(const RspMathingBattle& from);

  inline RspMathingBattle& operator=(const RspMathingBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspMathingBattle& default_instance();

  void Swap(RspMathingBattle* other);

  // implements Message ----------------------------------------------

  inline RspMathingBattle* New() const { return New(NULL); }

  RspMathingBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspMathingBattle& from);
  void MergeFrom(const RspMathingBattle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RspMathingBattle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:RspMathingBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static RspMathingBattle* default_instance_;
};
// -------------------------------------------------------------------

class EnterSelectHeroRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterSelectHeroRoom) */ {
 public:
  EnterSelectHeroRoom();
  virtual ~EnterSelectHeroRoom();

  EnterSelectHeroRoom(const EnterSelectHeroRoom& from);

  inline EnterSelectHeroRoom& operator=(const EnterSelectHeroRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSelectHeroRoom& default_instance();

  void Swap(EnterSelectHeroRoom* other);

  // implements Message ----------------------------------------------

  inline EnterSelectHeroRoom* New() const { return New(NULL); }

  EnterSelectHeroRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterSelectHeroRoom& from);
  void MergeFrom(const EnterSelectHeroRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterSelectHeroRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserData enemy_user_data = 1;
  bool has_enemy_user_data() const;
  void clear_enemy_user_data();
  static const int kEnemyUserDataFieldNumber = 1;
  const ::UserData& enemy_user_data() const;
  ::UserData* mutable_enemy_user_data();
  ::UserData* release_enemy_user_data();
  void set_allocated_enemy_user_data(::UserData* enemy_user_data);

  // @@protoc_insertion_point(class_scope:EnterSelectHeroRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::UserData* enemy_user_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static EnterSelectHeroRoom* default_instance_;
};
// -------------------------------------------------------------------

class ReqSelectHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqSelectHero) */ {
 public:
  ReqSelectHero();
  virtual ~ReqSelectHero();

  ReqSelectHero(const ReqSelectHero& from);

  inline ReqSelectHero& operator=(const ReqSelectHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSelectHero& default_instance();

  void Swap(ReqSelectHero* other);

  // implements Message ----------------------------------------------

  inline ReqSelectHero* New() const { return New(NULL); }

  ReqSelectHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSelectHero& from);
  void MergeFrom(const ReqSelectHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqSelectHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hero_id = 1;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::int32 hero_id() const;
  void set_hero_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReqSelectHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 hero_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static ReqSelectHero* default_instance_;
};
// -------------------------------------------------------------------

class RspSelectHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RspSelectHero) */ {
 public:
  RspSelectHero();
  virtual ~RspSelectHero();

  RspSelectHero(const RspSelectHero& from);

  inline RspSelectHero& operator=(const RspSelectHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspSelectHero& default_instance();

  void Swap(RspSelectHero* other);

  // implements Message ----------------------------------------------

  inline RspSelectHero* New() const { return New(NULL); }

  RspSelectHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspSelectHero& from);
  void MergeFrom(const RspSelectHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RspSelectHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:RspSelectHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static RspSelectHero* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRoomEnemyHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateRoomEnemyHero) */ {
 public:
  UpdateRoomEnemyHero();
  virtual ~UpdateRoomEnemyHero();

  UpdateRoomEnemyHero(const UpdateRoomEnemyHero& from);

  inline UpdateRoomEnemyHero& operator=(const UpdateRoomEnemyHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRoomEnemyHero& default_instance();

  void Swap(UpdateRoomEnemyHero* other);

  // implements Message ----------------------------------------------

  inline UpdateRoomEnemyHero* New() const { return New(NULL); }

  UpdateRoomEnemyHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateRoomEnemyHero& from);
  void MergeFrom(const UpdateRoomEnemyHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateRoomEnemyHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hero_id = 1;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::int32 hero_id() const;
  void set_hero_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UpdateRoomEnemyHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 hero_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static UpdateRoomEnemyHero* default_instance_;
};
// -------------------------------------------------------------------

class LoadBattleSceneBegin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoadBattleSceneBegin) */ {
 public:
  LoadBattleSceneBegin();
  virtual ~LoadBattleSceneBegin();

  LoadBattleSceneBegin(const LoadBattleSceneBegin& from);

  inline LoadBattleSceneBegin& operator=(const LoadBattleSceneBegin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadBattleSceneBegin& default_instance();

  void Swap(LoadBattleSceneBegin* other);

  // implements Message ----------------------------------------------

  inline LoadBattleSceneBegin* New() const { return New(NULL); }

  LoadBattleSceneBegin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoadBattleSceneBegin& from);
  void MergeFrom(const LoadBattleSceneBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadBattleSceneBegin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LoadBattleSceneBegin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static LoadBattleSceneBegin* default_instance_;
};
// -------------------------------------------------------------------

class ReqLoadBattleSceneEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReqLoadBattleSceneEnd) */ {
 public:
  ReqLoadBattleSceneEnd();
  virtual ~ReqLoadBattleSceneEnd();

  ReqLoadBattleSceneEnd(const ReqLoadBattleSceneEnd& from);

  inline ReqLoadBattleSceneEnd& operator=(const ReqLoadBattleSceneEnd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLoadBattleSceneEnd& default_instance();

  void Swap(ReqLoadBattleSceneEnd* other);

  // implements Message ----------------------------------------------

  inline ReqLoadBattleSceneEnd* New() const { return New(NULL); }

  ReqLoadBattleSceneEnd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLoadBattleSceneEnd& from);
  void MergeFrom(const ReqLoadBattleSceneEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqLoadBattleSceneEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ReqLoadBattleSceneEnd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static ReqLoadBattleSceneEnd* default_instance_;
};
// -------------------------------------------------------------------

class RspLoadBattleSceneEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RspLoadBattleSceneEnd) */ {
 public:
  RspLoadBattleSceneEnd();
  virtual ~RspLoadBattleSceneEnd();

  RspLoadBattleSceneEnd(const RspLoadBattleSceneEnd& from);

  inline RspLoadBattleSceneEnd& operator=(const RspLoadBattleSceneEnd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspLoadBattleSceneEnd& default_instance();

  void Swap(RspLoadBattleSceneEnd* other);

  // implements Message ----------------------------------------------

  inline RspLoadBattleSceneEnd* New() const { return New(NULL); }

  RspLoadBattleSceneEnd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspLoadBattleSceneEnd& from);
  void MergeFrom(const RspLoadBattleSceneEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RspLoadBattleSceneEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:RspLoadBattleSceneEnd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MatchingBattle_2eproto();
  friend void protobuf_AssignDesc_MatchingBattle_2eproto();
  friend void protobuf_ShutdownFile_MatchingBattle_2eproto();

  void InitAsDefaultInstance();
  static RspLoadBattleSceneEnd* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqMatchingBattle

// -------------------------------------------------------------------

// RspMathingBattle

// optional bool status = 1;
inline void RspMathingBattle::clear_status() {
  status_ = false;
}
inline bool RspMathingBattle::status() const {
  // @@protoc_insertion_point(field_get:RspMathingBattle.status)
  return status_;
}
inline void RspMathingBattle::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RspMathingBattle.status)
}

// -------------------------------------------------------------------

// EnterSelectHeroRoom

// optional .UserData enemy_user_data = 1;
inline bool EnterSelectHeroRoom::has_enemy_user_data() const {
  return !_is_default_instance_ && enemy_user_data_ != NULL;
}
inline void EnterSelectHeroRoom::clear_enemy_user_data() {
  if (GetArenaNoVirtual() == NULL && enemy_user_data_ != NULL) delete enemy_user_data_;
  enemy_user_data_ = NULL;
}
inline const ::UserData& EnterSelectHeroRoom::enemy_user_data() const {
  // @@protoc_insertion_point(field_get:EnterSelectHeroRoom.enemy_user_data)
  return enemy_user_data_ != NULL ? *enemy_user_data_ : *default_instance_->enemy_user_data_;
}
inline ::UserData* EnterSelectHeroRoom::mutable_enemy_user_data() {
  
  if (enemy_user_data_ == NULL) {
    enemy_user_data_ = new ::UserData;
  }
  // @@protoc_insertion_point(field_mutable:EnterSelectHeroRoom.enemy_user_data)
  return enemy_user_data_;
}
inline ::UserData* EnterSelectHeroRoom::release_enemy_user_data() {
  // @@protoc_insertion_point(field_release:EnterSelectHeroRoom.enemy_user_data)
  
  ::UserData* temp = enemy_user_data_;
  enemy_user_data_ = NULL;
  return temp;
}
inline void EnterSelectHeroRoom::set_allocated_enemy_user_data(::UserData* enemy_user_data) {
  delete enemy_user_data_;
  enemy_user_data_ = enemy_user_data;
  if (enemy_user_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:EnterSelectHeroRoom.enemy_user_data)
}

// -------------------------------------------------------------------

// ReqSelectHero

// optional int32 hero_id = 1;
inline void ReqSelectHero::clear_hero_id() {
  hero_id_ = 0;
}
inline ::google::protobuf::int32 ReqSelectHero::hero_id() const {
  // @@protoc_insertion_point(field_get:ReqSelectHero.hero_id)
  return hero_id_;
}
inline void ReqSelectHero::set_hero_id(::google::protobuf::int32 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:ReqSelectHero.hero_id)
}

// -------------------------------------------------------------------

// RspSelectHero

// optional bool status = 1;
inline void RspSelectHero::clear_status() {
  status_ = false;
}
inline bool RspSelectHero::status() const {
  // @@protoc_insertion_point(field_get:RspSelectHero.status)
  return status_;
}
inline void RspSelectHero::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RspSelectHero.status)
}

// -------------------------------------------------------------------

// UpdateRoomEnemyHero

// optional int32 hero_id = 1;
inline void UpdateRoomEnemyHero::clear_hero_id() {
  hero_id_ = 0;
}
inline ::google::protobuf::int32 UpdateRoomEnemyHero::hero_id() const {
  // @@protoc_insertion_point(field_get:UpdateRoomEnemyHero.hero_id)
  return hero_id_;
}
inline void UpdateRoomEnemyHero::set_hero_id(::google::protobuf::int32 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateRoomEnemyHero.hero_id)
}

// -------------------------------------------------------------------

// LoadBattleSceneBegin

// -------------------------------------------------------------------

// ReqLoadBattleSceneEnd

// -------------------------------------------------------------------

// RspLoadBattleSceneEnd

// optional bool status = 1;
inline void RspLoadBattleSceneEnd::clear_status() {
  status_ = false;
}
inline bool RspLoadBattleSceneEnd::status() const {
  // @@protoc_insertion_point(field_get:RspLoadBattleSceneEnd.status)
  return status_;
}
inline void RspLoadBattleSceneEnd::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RspLoadBattleSceneEnd.status)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MatchingBattle_2eproto__INCLUDED
