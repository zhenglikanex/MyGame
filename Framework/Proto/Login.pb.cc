// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ReqLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* RspLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RspLogin_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LoginError_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Login_2eproto() {
  protobuf_AddDesc_Login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Login.proto");
  GOOGLE_CHECK(file != NULL);
  ReqLogin_descriptor_ = file->message_type(0);
  static const int ReqLogin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogin, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogin, password_),
  };
  ReqLogin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqLogin_descriptor_,
      ReqLogin::default_instance_,
      ReqLogin_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReqLogin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogin, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqLogin, _is_default_instance_));
  RspLogin_descriptor_ = file->message_type(1);
  static const int RspLogin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspLogin, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspLogin, user_data_),
  };
  RspLogin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RspLogin_descriptor_,
      RspLogin::default_instance_,
      RspLogin_offsets_,
      -1,
      -1,
      -1,
      sizeof(RspLogin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspLogin, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspLogin, _is_default_instance_));
  LoginError_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqLogin_descriptor_, &ReqLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RspLogin_descriptor_, &RspLogin::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Login_2eproto() {
  delete ReqLogin::default_instance_;
  delete ReqLogin_reflection_;
  delete RspLogin::default_instance_;
  delete RspLogin_reflection_;
}

void protobuf_AddDesc_Login_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Login_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_UserData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Login.proto\032\016UserData.proto\"-\n\010ReqLogi"
    "n\022\017\n\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"E\n\010"
    "RspLogin\022\033\n\006status\030\001 \001(\0162\013.LoginError\022\034\n"
    "\tuser_data\030\002 \001(\0132\t.UserData*]\n\nLoginErro"
    "r\022\021\n\rkLoginSuccess\020\000\022\017\n\013kNotAccount\020\001\022\027\n"
    "\023kUserNameOrPwdError\020\002\022\022\n\016kAccountOnline"
    "\020\003b\006proto3", 250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Login.proto", &protobuf_RegisterTypes);
  ReqLogin::default_instance_ = new ReqLogin();
  RspLogin::default_instance_ = new RspLogin();
  ReqLogin::default_instance_->InitAsDefaultInstance();
  RspLogin::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Login_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Login_2eproto {
  StaticDescriptorInitializer_Login_2eproto() {
    protobuf_AddDesc_Login_2eproto();
  }
} static_descriptor_initializer_Login_2eproto_;
const ::google::protobuf::EnumDescriptor* LoginError_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginError_descriptor_;
}
bool LoginError_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqLogin::kAccountFieldNumber;
const int ReqLogin::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqLogin::ReqLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReqLogin)
}

void ReqLogin::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReqLogin::ReqLogin(const ReqLogin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReqLogin)
}

void ReqLogin::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqLogin::~ReqLogin() {
  // @@protoc_insertion_point(destructor:ReqLogin)
  SharedDtor();
}

void ReqLogin::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReqLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqLogin_descriptor_;
}

const ReqLogin& ReqLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

ReqLogin* ReqLogin::default_instance_ = NULL;

ReqLogin* ReqLogin::New(::google::protobuf::Arena* arena) const {
  ReqLogin* n = new ReqLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqLogin)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReqLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReqLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReqLogin.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReqLogin.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReqLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReqLogin)
  return false;
#undef DO_
}

void ReqLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReqLogin)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqLogin.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqLogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:ReqLogin)
}

::google::protobuf::uint8* ReqLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqLogin)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqLogin.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqLogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ReqLogin)
  return target;
}

int ReqLogin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ReqLogin)
  int total_size = 0;

  // optional string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReqLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReqLogin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReqLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReqLogin)
    MergeFrom(*source);
  }
}

void ReqLogin::MergeFrom(const ReqLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void ReqLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReqLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqLogin::CopyFrom(const ReqLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqLogin::IsInitialized() const {

  return true;
}

void ReqLogin::Swap(ReqLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqLogin::InternalSwap(ReqLogin* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqLogin_descriptor_;
  metadata.reflection = ReqLogin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqLogin

// optional string account = 1;
void ReqLogin::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReqLogin::account() const {
  // @@protoc_insertion_point(field_get:ReqLogin.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqLogin::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqLogin.account)
}
 void ReqLogin::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqLogin.account)
}
 void ReqLogin::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqLogin.account)
}
 ::std::string* ReqLogin::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:ReqLogin.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqLogin::release_account() {
  // @@protoc_insertion_point(field_release:ReqLogin.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqLogin::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:ReqLogin.account)
}

// optional string password = 2;
void ReqLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReqLogin::password() const {
  // @@protoc_insertion_point(field_get:ReqLogin.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqLogin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqLogin.password)
}
 void ReqLogin::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqLogin.password)
}
 void ReqLogin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqLogin.password)
}
 ::std::string* ReqLogin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:ReqLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqLogin::release_password() {
  // @@protoc_insertion_point(field_release:ReqLogin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ReqLogin.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspLogin::kStatusFieldNumber;
const int RspLogin::kUserDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspLogin::RspLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RspLogin)
}

void RspLogin::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_data_ = const_cast< ::UserData*>(&::UserData::default_instance());
}

RspLogin::RspLogin(const RspLogin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RspLogin)
}

void RspLogin::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
  user_data_ = NULL;
}

RspLogin::~RspLogin() {
  // @@protoc_insertion_point(destructor:RspLogin)
  SharedDtor();
}

void RspLogin::SharedDtor() {
  if (this != default_instance_) {
    delete user_data_;
  }
}

void RspLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RspLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RspLogin_descriptor_;
}

const RspLogin& RspLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Login_2eproto();
  return *default_instance_;
}

RspLogin* RspLogin::default_instance_ = NULL;

RspLogin* RspLogin::New(::google::protobuf::Arena* arena) const {
  RspLogin* n = new RspLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RspLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:RspLogin)
  status_ = 0;
  if (GetArenaNoVirtual() == NULL && user_data_ != NULL) delete user_data_;
  user_data_ = NULL;
}

bool RspLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RspLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .LoginError status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::LoginError >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_data;
        break;
      }

      // optional .UserData user_data = 2;
      case 2: {
        if (tag == 18) {
         parse_user_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RspLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RspLogin)
  return false;
#undef DO_
}

void RspLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RspLogin)
  // optional .LoginError status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional .UserData user_data = 2;
  if (this->has_user_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:RspLogin)
}

::google::protobuf::uint8* RspLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RspLogin)
  // optional .LoginError status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional .UserData user_data = 2;
  if (this->has_user_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->user_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RspLogin)
  return target;
}

int RspLogin::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RspLogin)
  int total_size = 0;

  // optional .LoginError status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional .UserData user_data = 2;
  if (this->has_user_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RspLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RspLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RspLogin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RspLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RspLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RspLogin)
    MergeFrom(*source);
  }
}

void RspLogin::MergeFrom(const RspLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RspLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.has_user_data()) {
    mutable_user_data()->::UserData::MergeFrom(from.user_data());
  }
}

void RspLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RspLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspLogin::CopyFrom(const RspLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RspLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspLogin::IsInitialized() const {

  return true;
}

void RspLogin::Swap(RspLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspLogin::InternalSwap(RspLogin* other) {
  std::swap(status_, other->status_);
  std::swap(user_data_, other->user_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RspLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RspLogin_descriptor_;
  metadata.reflection = RspLogin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RspLogin

// optional .LoginError status = 1;
void RspLogin::clear_status() {
  status_ = 0;
}
 ::LoginError RspLogin::status() const {
  // @@protoc_insertion_point(field_get:RspLogin.status)
  return static_cast< ::LoginError >(status_);
}
 void RspLogin::set_status(::LoginError value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RspLogin.status)
}

// optional .UserData user_data = 2;
bool RspLogin::has_user_data() const {
  return !_is_default_instance_ && user_data_ != NULL;
}
void RspLogin::clear_user_data() {
  if (GetArenaNoVirtual() == NULL && user_data_ != NULL) delete user_data_;
  user_data_ = NULL;
}
const ::UserData& RspLogin::user_data() const {
  // @@protoc_insertion_point(field_get:RspLogin.user_data)
  return user_data_ != NULL ? *user_data_ : *default_instance_->user_data_;
}
::UserData* RspLogin::mutable_user_data() {
  
  if (user_data_ == NULL) {
    user_data_ = new ::UserData;
  }
  // @@protoc_insertion_point(field_mutable:RspLogin.user_data)
  return user_data_;
}
::UserData* RspLogin::release_user_data() {
  // @@protoc_insertion_point(field_release:RspLogin.user_data)
  
  ::UserData* temp = user_data_;
  user_data_ = NULL;
  return temp;
}
void RspLogin::set_allocated_user_data(::UserData* user_data) {
  delete user_data_;
  user_data_ = user_data;
  if (user_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RspLogin.user_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
