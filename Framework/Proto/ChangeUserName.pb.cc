// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChangeUserName.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ChangeUserName.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ReqChangeName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqChangeName_reflection_ = NULL;
const ::google::protobuf::Descriptor* RspChangeName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RspChangeName_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ChangeNameError_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ChangeUserName_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ChangeUserName_2eproto() {
  protobuf_AddDesc_ChangeUserName_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ChangeUserName.proto");
  GOOGLE_CHECK(file != NULL);
  ReqChangeName_descriptor_ = file->message_type(0);
  static const int ReqChangeName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqChangeName, name_),
  };
  ReqChangeName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqChangeName_descriptor_,
      ReqChangeName::default_instance_,
      ReqChangeName_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReqChangeName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqChangeName, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqChangeName, _is_default_instance_));
  RspChangeName_descriptor_ = file->message_type(1);
  static const int RspChangeName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspChangeName, status_),
  };
  RspChangeName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RspChangeName_descriptor_,
      RspChangeName::default_instance_,
      RspChangeName_offsets_,
      -1,
      -1,
      -1,
      sizeof(RspChangeName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspChangeName, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspChangeName, _is_default_instance_));
  ChangeNameError_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ChangeUserName_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqChangeName_descriptor_, &ReqChangeName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RspChangeName_descriptor_, &RspChangeName::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ChangeUserName_2eproto() {
  delete ReqChangeName::default_instance_;
  delete ReqChangeName_reflection_;
  delete RspChangeName::default_instance_;
  delete RspChangeName_reflection_;
}

void protobuf_AddDesc_ChangeUserName_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ChangeUserName_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ChangeUserName.proto\"\035\n\rReqChangeName\022"
    "\014\n\004name\030\001 \001(\t\"1\n\rRspChangeName\022 \n\006status"
    "\030\001 \001(\0162\020.ChangeNameError*W\n\017ChangeNameEr"
    "ror\022\026\n\022kChangeNameSuccess\020\000\022\025\n\021kChangeNa"
    "meRepeat\020\001\022\025\n\021kChangeNameIllega\020\002b\006proto"
    "3", 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ChangeUserName.proto", &protobuf_RegisterTypes);
  ReqChangeName::default_instance_ = new ReqChangeName();
  RspChangeName::default_instance_ = new RspChangeName();
  ReqChangeName::default_instance_->InitAsDefaultInstance();
  RspChangeName::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ChangeUserName_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ChangeUserName_2eproto {
  StaticDescriptorInitializer_ChangeUserName_2eproto() {
    protobuf_AddDesc_ChangeUserName_2eproto();
  }
} static_descriptor_initializer_ChangeUserName_2eproto_;
const ::google::protobuf::EnumDescriptor* ChangeNameError_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeNameError_descriptor_;
}
bool ChangeNameError_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqChangeName::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqChangeName::ReqChangeName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReqChangeName)
}

void ReqChangeName::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReqChangeName::ReqChangeName(const ReqChangeName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReqChangeName)
}

void ReqChangeName::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqChangeName::~ReqChangeName() {
  // @@protoc_insertion_point(destructor:ReqChangeName)
  SharedDtor();
}

void ReqChangeName::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReqChangeName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqChangeName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqChangeName_descriptor_;
}

const ReqChangeName& ReqChangeName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChangeUserName_2eproto();
  return *default_instance_;
}

ReqChangeName* ReqChangeName::default_instance_ = NULL;

ReqChangeName* ReqChangeName::New(::google::protobuf::Arena* arena) const {
  ReqChangeName* n = new ReqChangeName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqChangeName::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqChangeName)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReqChangeName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReqChangeName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReqChangeName.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReqChangeName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReqChangeName)
  return false;
#undef DO_
}

void ReqChangeName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReqChangeName)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqChangeName.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ReqChangeName)
}

::google::protobuf::uint8* ReqChangeName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqChangeName)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqChangeName.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ReqChangeName)
  return target;
}

int ReqChangeName::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ReqChangeName)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqChangeName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReqChangeName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReqChangeName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqChangeName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReqChangeName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReqChangeName)
    MergeFrom(*source);
  }
}

void ReqChangeName::MergeFrom(const ReqChangeName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqChangeName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ReqChangeName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReqChangeName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqChangeName::CopyFrom(const ReqChangeName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqChangeName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqChangeName::IsInitialized() const {

  return true;
}

void ReqChangeName::Swap(ReqChangeName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqChangeName::InternalSwap(ReqChangeName* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqChangeName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqChangeName_descriptor_;
  metadata.reflection = ReqChangeName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqChangeName

// optional string name = 1;
void ReqChangeName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReqChangeName::name() const {
  // @@protoc_insertion_point(field_get:ReqChangeName.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqChangeName::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqChangeName.name)
}
 void ReqChangeName::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqChangeName.name)
}
 void ReqChangeName::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqChangeName.name)
}
 ::std::string* ReqChangeName::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ReqChangeName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqChangeName::release_name() {
  // @@protoc_insertion_point(field_release:ReqChangeName.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqChangeName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ReqChangeName.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspChangeName::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspChangeName::RspChangeName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RspChangeName)
}

void RspChangeName::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RspChangeName::RspChangeName(const RspChangeName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RspChangeName)
}

void RspChangeName::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

RspChangeName::~RspChangeName() {
  // @@protoc_insertion_point(destructor:RspChangeName)
  SharedDtor();
}

void RspChangeName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RspChangeName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RspChangeName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RspChangeName_descriptor_;
}

const RspChangeName& RspChangeName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ChangeUserName_2eproto();
  return *default_instance_;
}

RspChangeName* RspChangeName::default_instance_ = NULL;

RspChangeName* RspChangeName::New(::google::protobuf::Arena* arena) const {
  RspChangeName* n = new RspChangeName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RspChangeName::Clear() {
// @@protoc_insertion_point(message_clear_start:RspChangeName)
  status_ = 0;
}

bool RspChangeName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RspChangeName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ChangeNameError status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::ChangeNameError >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RspChangeName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RspChangeName)
  return false;
#undef DO_
}

void RspChangeName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RspChangeName)
  // optional .ChangeNameError status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:RspChangeName)
}

::google::protobuf::uint8* RspChangeName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RspChangeName)
  // optional .ChangeNameError status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RspChangeName)
  return target;
}

int RspChangeName::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RspChangeName)
  int total_size = 0;

  // optional .ChangeNameError status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RspChangeName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RspChangeName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RspChangeName* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RspChangeName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RspChangeName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RspChangeName)
    MergeFrom(*source);
  }
}

void RspChangeName::MergeFrom(const RspChangeName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RspChangeName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RspChangeName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RspChangeName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspChangeName::CopyFrom(const RspChangeName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RspChangeName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspChangeName::IsInitialized() const {

  return true;
}

void RspChangeName::Swap(RspChangeName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspChangeName::InternalSwap(RspChangeName* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RspChangeName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RspChangeName_descriptor_;
  metadata.reflection = RspChangeName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RspChangeName

// optional .ChangeNameError status = 1;
void RspChangeName::clear_status() {
  status_ = 0;
}
 ::ChangeNameError RspChangeName::status() const {
  // @@protoc_insertion_point(field_get:RspChangeName.status)
  return static_cast< ::ChangeNameError >(status_);
}
 void RspChangeName::set_status(::ChangeNameError value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RspChangeName.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
