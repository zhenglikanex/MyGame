// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RegisterAccount.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RegisterAccount.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ReqRegAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReqRegAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* RspRegAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RspRegAccount_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RegisterError_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_RegisterAccount_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_RegisterAccount_2eproto() {
  protobuf_AddDesc_RegisterAccount_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RegisterAccount.proto");
  GOOGLE_CHECK(file != NULL);
  ReqRegAccount_descriptor_ = file->message_type(0);
  static const int ReqRegAccount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegAccount, account_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegAccount, password_),
  };
  ReqRegAccount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReqRegAccount_descriptor_,
      ReqRegAccount::default_instance_,
      ReqRegAccount_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReqRegAccount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegAccount, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRegAccount, _is_default_instance_));
  RspRegAccount_descriptor_ = file->message_type(1);
  static const int RspRegAccount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspRegAccount, status_),
  };
  RspRegAccount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RspRegAccount_descriptor_,
      RspRegAccount::default_instance_,
      RspRegAccount_offsets_,
      -1,
      -1,
      -1,
      sizeof(RspRegAccount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspRegAccount, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RspRegAccount, _is_default_instance_));
  RegisterError_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RegisterAccount_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReqRegAccount_descriptor_, &ReqRegAccount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RspRegAccount_descriptor_, &RspRegAccount::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RegisterAccount_2eproto() {
  delete ReqRegAccount::default_instance_;
  delete ReqRegAccount_reflection_;
  delete RspRegAccount::default_instance_;
  delete RspRegAccount_reflection_;
}

void protobuf_AddDesc_RegisterAccount_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_RegisterAccount_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025RegisterAccount.proto\"2\n\rReqRegAccount"
    "\022\017\n\007account\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"/\n\rR"
    "spRegAccount\022\036\n\006status\030\001 \001(\0162\016.RegisterE"
    "rror*F\n\rRegisterError\022\017\n\013kRegSuccess\020\000\022\021"
    "\n\rkAcountRepeat\020\001\022\021\n\rkAcountIllega\020\002b\006pr"
    "oto3", 204);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RegisterAccount.proto", &protobuf_RegisterTypes);
  ReqRegAccount::default_instance_ = new ReqRegAccount();
  RspRegAccount::default_instance_ = new RspRegAccount();
  ReqRegAccount::default_instance_->InitAsDefaultInstance();
  RspRegAccount::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RegisterAccount_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RegisterAccount_2eproto {
  StaticDescriptorInitializer_RegisterAccount_2eproto() {
    protobuf_AddDesc_RegisterAccount_2eproto();
  }
} static_descriptor_initializer_RegisterAccount_2eproto_;
const ::google::protobuf::EnumDescriptor* RegisterError_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegisterError_descriptor_;
}
bool RegisterError_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRegAccount::kAccountFieldNumber;
const int ReqRegAccount::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRegAccount::ReqRegAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReqRegAccount)
}

void ReqRegAccount::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReqRegAccount::ReqRegAccount(const ReqRegAccount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReqRegAccount)
}

void ReqRegAccount::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReqRegAccount::~ReqRegAccount() {
  // @@protoc_insertion_point(destructor:ReqRegAccount)
  SharedDtor();
}

void ReqRegAccount::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReqRegAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRegAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReqRegAccount_descriptor_;
}

const ReqRegAccount& ReqRegAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RegisterAccount_2eproto();
  return *default_instance_;
}

ReqRegAccount* ReqRegAccount::default_instance_ = NULL;

ReqRegAccount* ReqRegAccount::New(::google::protobuf::Arena* arena) const {
  ReqRegAccount* n = new ReqRegAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqRegAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:ReqRegAccount)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReqRegAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReqRegAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReqRegAccount.account"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ReqRegAccount.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReqRegAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReqRegAccount)
  return false;
#undef DO_
}

void ReqRegAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReqRegAccount)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqRegAccount.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqRegAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:ReqRegAccount)
}

::google::protobuf::uint8* ReqRegAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReqRegAccount)
  // optional string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqRegAccount.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ReqRegAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ReqRegAccount)
  return target;
}

int ReqRegAccount::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ReqRegAccount)
  int total_size = 0;

  // optional string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRegAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReqRegAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReqRegAccount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRegAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReqRegAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReqRegAccount)
    MergeFrom(*source);
  }
}

void ReqRegAccount::MergeFrom(const ReqRegAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReqRegAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void ReqRegAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReqRegAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRegAccount::CopyFrom(const ReqRegAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReqRegAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRegAccount::IsInitialized() const {

  return true;
}

void ReqRegAccount::Swap(ReqRegAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRegAccount::InternalSwap(ReqRegAccount* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqRegAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReqRegAccount_descriptor_;
  metadata.reflection = ReqRegAccount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqRegAccount

// optional string account = 1;
void ReqRegAccount::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReqRegAccount::account() const {
  // @@protoc_insertion_point(field_get:ReqRegAccount.account)
  return account_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqRegAccount::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqRegAccount.account)
}
 void ReqRegAccount::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqRegAccount.account)
}
 void ReqRegAccount::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqRegAccount.account)
}
 ::std::string* ReqRegAccount::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:ReqRegAccount.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqRegAccount::release_account() {
  // @@protoc_insertion_point(field_release:ReqRegAccount.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqRegAccount::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:ReqRegAccount.account)
}

// optional string password = 2;
void ReqRegAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReqRegAccount::password() const {
  // @@protoc_insertion_point(field_get:ReqRegAccount.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqRegAccount::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReqRegAccount.password)
}
 void ReqRegAccount::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReqRegAccount.password)
}
 void ReqRegAccount::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReqRegAccount.password)
}
 ::std::string* ReqRegAccount::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:ReqRegAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReqRegAccount::release_password() {
  // @@protoc_insertion_point(field_release:ReqRegAccount.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReqRegAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ReqRegAccount.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspRegAccount::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspRegAccount::RspRegAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RspRegAccount)
}

void RspRegAccount::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RspRegAccount::RspRegAccount(const RspRegAccount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RspRegAccount)
}

void RspRegAccount::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
}

RspRegAccount::~RspRegAccount() {
  // @@protoc_insertion_point(destructor:RspRegAccount)
  SharedDtor();
}

void RspRegAccount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RspRegAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RspRegAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RspRegAccount_descriptor_;
}

const RspRegAccount& RspRegAccount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RegisterAccount_2eproto();
  return *default_instance_;
}

RspRegAccount* RspRegAccount::default_instance_ = NULL;

RspRegAccount* RspRegAccount::New(::google::protobuf::Arena* arena) const {
  RspRegAccount* n = new RspRegAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RspRegAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:RspRegAccount)
  status_ = 0;
}

bool RspRegAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RspRegAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RegisterError status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::RegisterError >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RspRegAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RspRegAccount)
  return false;
#undef DO_
}

void RspRegAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RspRegAccount)
  // optional .RegisterError status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:RspRegAccount)
}

::google::protobuf::uint8* RspRegAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RspRegAccount)
  // optional .RegisterError status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RspRegAccount)
  return target;
}

int RspRegAccount::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RspRegAccount)
  int total_size = 0;

  // optional .RegisterError status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RspRegAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RspRegAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RspRegAccount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RspRegAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RspRegAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RspRegAccount)
    MergeFrom(*source);
  }
}

void RspRegAccount::MergeFrom(const RspRegAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RspRegAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RspRegAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RspRegAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspRegAccount::CopyFrom(const RspRegAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RspRegAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspRegAccount::IsInitialized() const {

  return true;
}

void RspRegAccount::Swap(RspRegAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspRegAccount::InternalSwap(RspRegAccount* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RspRegAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RspRegAccount_descriptor_;
  metadata.reflection = RspRegAccount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RspRegAccount

// optional .RegisterError status = 1;
void RspRegAccount::clear_status() {
  status_ = 0;
}
 ::RegisterError RspRegAccount::status() const {
  // @@protoc_insertion_point(field_get:RspRegAccount.status)
  return static_cast< ::RegisterError >(status_);
}
 void RspRegAccount::set_status(::RegisterError value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:RspRegAccount.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
