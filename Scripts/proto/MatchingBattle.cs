// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatchingBattle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MatchingBattle.proto</summary>
public static partial class MatchingBattleReflection {

  #region Descriptor
  /// <summary>File descriptor for MatchingBattle.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MatchingBattleReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRNYXRjaGluZ0JhdHRsZS5wcm90bxoOVXNlckRhdGEucHJvdG8iEwoRUmVx",
          "TWF0Y2hpbmdCYXR0bGUiIgoQUnNwTWF0aGluZ0JhdHRsZRIOCgZzdGF0dXMY",
          "ASABKAgiOQoTRW50ZXJTZWxlY3RIZXJvUm9vbRIiCg9lbmVteV91c2VyX2Rh",
          "dGEYASABKAsyCS5Vc2VyRGF0YSIgCg1SZXFTZWxlY3RIZXJvEg8KB2hlcm9f",
          "aWQYASABKAUiHwoNUnNwU2VsZWN0SGVybxIOCgZzdGF0dXMYASABKAgiJgoT",
          "VXBkYXRlUm9vbUVuZW15SGVybxIPCgdoZXJvX2lkGAEgASgFIhYKFExvYWRC",
          "YXR0bGVTY2VuZUJlZ2luIhcKFVJlcUxvYWRCYXR0bGVTY2VuZUVuZCInChVS",
          "c3BMb2FkQmF0dGxlU2NlbmVFbmQSDgoGc3RhdHVzGAEgASgIYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::UserDataReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ReqMatchingBattle), global::ReqMatchingBattle.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RspMathingBattle), global::RspMathingBattle.Parser, new[]{ "Status" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnterSelectHeroRoom), global::EnterSelectHeroRoom.Parser, new[]{ "EnemyUserData" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReqSelectHero), global::ReqSelectHero.Parser, new[]{ "HeroId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RspSelectHero), global::RspSelectHero.Parser, new[]{ "Status" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpdateRoomEnemyHero), global::UpdateRoomEnemyHero.Parser, new[]{ "HeroId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoadBattleSceneBegin), global::LoadBattleSceneBegin.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReqLoadBattleSceneEnd), global::ReqLoadBattleSceneEnd.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RspLoadBattleSceneEnd), global::RspLoadBattleSceneEnd.Parser, new[]{ "Status" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///  请求匹配战斗
/// </summary>
public sealed partial class ReqMatchingBattle : pb::IMessage<ReqMatchingBattle> {
  private static readonly pb::MessageParser<ReqMatchingBattle> _parser = new pb::MessageParser<ReqMatchingBattle>(() => new ReqMatchingBattle());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReqMatchingBattle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqMatchingBattle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqMatchingBattle(ReqMatchingBattle other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqMatchingBattle Clone() {
    return new ReqMatchingBattle(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReqMatchingBattle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReqMatchingBattle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReqMatchingBattle other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class RspMathingBattle : pb::IMessage<RspMathingBattle> {
  private static readonly pb::MessageParser<RspMathingBattle> _parser = new pb::MessageParser<RspMathingBattle>(() => new RspMathingBattle());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RspMathingBattle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspMathingBattle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspMathingBattle(RspMathingBattle other) : this() {
    status_ = other.status_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspMathingBattle Clone() {
    return new RspMathingBattle(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private bool status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RspMathingBattle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RspMathingBattle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != false) hash ^= Status.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != false) {
      output.WriteRawTag(8);
      output.WriteBool(Status);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RspMathingBattle other) {
    if (other == null) {
      return;
    }
    if (other.Status != false) {
      Status = other.Status;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Status = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
///  进入选择英雄房间
/// </summary>
public sealed partial class EnterSelectHeroRoom : pb::IMessage<EnterSelectHeroRoom> {
  private static readonly pb::MessageParser<EnterSelectHeroRoom> _parser = new pb::MessageParser<EnterSelectHeroRoom>(() => new EnterSelectHeroRoom());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnterSelectHeroRoom> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterSelectHeroRoom() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterSelectHeroRoom(EnterSelectHeroRoom other) : this() {
    EnemyUserData = other.enemyUserData_ != null ? other.EnemyUserData.Clone() : null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterSelectHeroRoom Clone() {
    return new EnterSelectHeroRoom(this);
  }

  /// <summary>Field number for the "enemy_user_data" field.</summary>
  public const int EnemyUserDataFieldNumber = 1;
  private global::UserData enemyUserData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserData EnemyUserData {
    get { return enemyUserData_; }
    set {
      enemyUserData_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnterSelectHeroRoom);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnterSelectHeroRoom other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(EnemyUserData, other.EnemyUserData)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (enemyUserData_ != null) hash ^= EnemyUserData.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (enemyUserData_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(EnemyUserData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (enemyUserData_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnemyUserData);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnterSelectHeroRoom other) {
    if (other == null) {
      return;
    }
    if (other.enemyUserData_ != null) {
      if (enemyUserData_ == null) {
        enemyUserData_ = new global::UserData();
      }
      EnemyUserData.MergeFrom(other.EnemyUserData);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          if (enemyUserData_ == null) {
            enemyUserData_ = new global::UserData();
          }
          input.ReadMessage(enemyUserData_);
          break;
        }
      }
    }
  }

}

public sealed partial class ReqSelectHero : pb::IMessage<ReqSelectHero> {
  private static readonly pb::MessageParser<ReqSelectHero> _parser = new pb::MessageParser<ReqSelectHero>(() => new ReqSelectHero());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReqSelectHero> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqSelectHero() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqSelectHero(ReqSelectHero other) : this() {
    heroId_ = other.heroId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqSelectHero Clone() {
    return new ReqSelectHero(this);
  }

  /// <summary>Field number for the "hero_id" field.</summary>
  public const int HeroIdFieldNumber = 1;
  private int heroId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int HeroId {
    get { return heroId_; }
    set {
      heroId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReqSelectHero);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReqSelectHero other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeroId != other.HeroId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HeroId != 0) hash ^= HeroId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HeroId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HeroId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HeroId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReqSelectHero other) {
    if (other == null) {
      return;
    }
    if (other.HeroId != 0) {
      HeroId = other.HeroId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          HeroId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class RspSelectHero : pb::IMessage<RspSelectHero> {
  private static readonly pb::MessageParser<RspSelectHero> _parser = new pb::MessageParser<RspSelectHero>(() => new RspSelectHero());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RspSelectHero> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspSelectHero() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspSelectHero(RspSelectHero other) : this() {
    status_ = other.status_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspSelectHero Clone() {
    return new RspSelectHero(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private bool status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RspSelectHero);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RspSelectHero other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != false) hash ^= Status.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != false) {
      output.WriteRawTag(8);
      output.WriteBool(Status);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RspSelectHero other) {
    if (other == null) {
      return;
    }
    if (other.Status != false) {
      Status = other.Status;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Status = input.ReadBool();
          break;
        }
      }
    }
  }

}

/// <summary>
///  更新其他玩家
/// </summary>
public sealed partial class UpdateRoomEnemyHero : pb::IMessage<UpdateRoomEnemyHero> {
  private static readonly pb::MessageParser<UpdateRoomEnemyHero> _parser = new pb::MessageParser<UpdateRoomEnemyHero>(() => new UpdateRoomEnemyHero());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpdateRoomEnemyHero> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomEnemyHero() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomEnemyHero(UpdateRoomEnemyHero other) : this() {
    heroId_ = other.heroId_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpdateRoomEnemyHero Clone() {
    return new UpdateRoomEnemyHero(this);
  }

  /// <summary>Field number for the "hero_id" field.</summary>
  public const int HeroIdFieldNumber = 1;
  private int heroId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int HeroId {
    get { return heroId_; }
    set {
      heroId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpdateRoomEnemyHero);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpdateRoomEnemyHero other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeroId != other.HeroId) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HeroId != 0) hash ^= HeroId.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HeroId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HeroId);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HeroId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpdateRoomEnemyHero other) {
    if (other == null) {
      return;
    }
    if (other.HeroId != 0) {
      HeroId = other.HeroId;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          HeroId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class LoadBattleSceneBegin : pb::IMessage<LoadBattleSceneBegin> {
  private static readonly pb::MessageParser<LoadBattleSceneBegin> _parser = new pb::MessageParser<LoadBattleSceneBegin>(() => new LoadBattleSceneBegin());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoadBattleSceneBegin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadBattleSceneBegin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadBattleSceneBegin(LoadBattleSceneBegin other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadBattleSceneBegin Clone() {
    return new LoadBattleSceneBegin(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoadBattleSceneBegin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoadBattleSceneBegin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoadBattleSceneBegin other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class ReqLoadBattleSceneEnd : pb::IMessage<ReqLoadBattleSceneEnd> {
  private static readonly pb::MessageParser<ReqLoadBattleSceneEnd> _parser = new pb::MessageParser<ReqLoadBattleSceneEnd>(() => new ReqLoadBattleSceneEnd());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReqLoadBattleSceneEnd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLoadBattleSceneEnd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLoadBattleSceneEnd(ReqLoadBattleSceneEnd other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqLoadBattleSceneEnd Clone() {
    return new ReqLoadBattleSceneEnd(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReqLoadBattleSceneEnd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReqLoadBattleSceneEnd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReqLoadBattleSceneEnd other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class RspLoadBattleSceneEnd : pb::IMessage<RspLoadBattleSceneEnd> {
  private static readonly pb::MessageParser<RspLoadBattleSceneEnd> _parser = new pb::MessageParser<RspLoadBattleSceneEnd>(() => new RspLoadBattleSceneEnd());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RspLoadBattleSceneEnd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MatchingBattleReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspLoadBattleSceneEnd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspLoadBattleSceneEnd(RspLoadBattleSceneEnd other) : this() {
    status_ = other.status_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspLoadBattleSceneEnd Clone() {
    return new RspLoadBattleSceneEnd(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private bool status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RspLoadBattleSceneEnd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RspLoadBattleSceneEnd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != false) hash ^= Status.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Status != false) {
      output.WriteRawTag(8);
      output.WriteBool(Status);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RspLoadBattleSceneEnd other) {
    if (other == null) {
      return;
    }
    if (other.Status != false) {
      Status = other.Status;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Status = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
